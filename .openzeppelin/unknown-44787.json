{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x861095d92ec90C0c9ecdcb29a77d9D1cebf9d421",
    "txHash": "0xf59ebdc1dd1ddabae2cb808dc78d2c6f8bcf7b24ddb1a20e28efd0058ff760ec"
  },
  "proxies": [
    {
      "address": "0x933d6bfd61e7b2bc150D4cde4db397dd3c0AAC97",
      "txHash": "0xd9ad19c733f3c31a7e576f8814109988421a7c48120410abd1fe97b192a4279e",
      "kind": "transparent"
    },
    {
      "address": "0x1d2C575E6d6EEd9bb4d3c289729BC741517919d3",
      "txHash": "0x55dd4b6d925fadd2d06c79ff47f6e562e4eb5ab85c7ca4ac3ac5e7222f54e406",
      "kind": "transparent"
    },
    {
      "address": "0x893dA61196Cff7Ab3B5f490B8a6a3DeBaBD27427",
      "txHash": "0x3b5c68cf89d3ea394799dbdaa16b46d1037a6adf3bc7135a227b6c605519bd0a",
      "kind": "transparent"
    },
    {
      "address": "0x7B4Cec2231B5075718Ec73AE485B251C7644cCBf",
      "txHash": "0x811ed042ee70a41b784eae572e20249ee682cb0d50882946d602eb67c47c3e58",
      "kind": "transparent"
    },
    {
      "address": "0x3D8711853fCA5B033C7ca228d931bd90F474203F",
      "txHash": "0xa78a7a3a0d2afae338bcde3c352114b444b0d64229aad8707b6794857cb67ff8",
      "kind": "transparent"
    },
    {
      "address": "0xf67cd2eAf345903f8e87cEb681a38a9938fa6c70",
      "txHash": "0xcd47cbeafbe4cfe23da85a59cd3d9114ef3b6159615f4ea4c506c9af1043d56a",
      "kind": "transparent"
    },
    {
      "address": "0x0a782E114fcbd3e9Ca446d34a8a3b4547B2Ab7fE",
      "txHash": "0x4e6ad48b9f475935a7ab5a1355fdcf59d1dd20ebc7e26685f548497d44edeedb",
      "kind": "transparent"
    },
    {
      "address": "0xe912783eE354AdbC7fccD4835d537A3dcF50D73A",
      "txHash": "0x169c8d59c61b7b722a022f52bd84798626ca09483bc48c6f069481eb62c26e3e",
      "kind": "transparent"
    },
    {
      "address": "0xD729F0BAad5081A14a773b510Af9c3c0949BaD9e",
      "txHash": "0x74e5e408e8ce646bd9083184ddb89fa2010e58ebc0a55091c9808b5de32e1a74",
      "kind": "transparent"
    },
    {
      "address": "0xF54afcFdcE88bfB678ecc5eAA788fe9Ff0a2DE49",
      "txHash": "0xc7f08e432088057454b5671c4e9239b4487cf3cf12553fb39541ff2e134eb81e",
      "kind": "transparent"
    },
    {
      "address": "0x1B9A7c9F2493dd6738178082D3d1B69b581f3163",
      "txHash": "0x27347c90f67b24a1e6026f3e5130334931136344455bb00bc9cbf627f8dfe369",
      "kind": "transparent"
    },
    {
      "address": "0x1124B5C5c4aF9cAa1E48F865d05118A864517a6d",
      "txHash": "0xf4862b8838355225b942a3ed7b50a291314355b237005d410e094a108a435059",
      "kind": "transparent"
    },
    {
      "address": "0x7761FD0ffeb0850065AD086d19c7eAf33115A0EB",
      "txHash": "0x238e261ab81380c49942a57d00c512a903c1446ec525be266a4d13b14bb2745c",
      "kind": "transparent"
    },
    {
      "address": "0x73644C19F07711877d494f32Ba5F8FE107e48832",
      "txHash": "0x5df6ac3de8f2ddf0277ef6dd764e45287c02a86fa5ca660a8823ddbf6e086cab",
      "kind": "transparent"
    },
    {
      "address": "0x4C0245812C565fdDDD800F3bB4a2B37AFb0211cD",
      "txHash": "0x3bfe2915754989f0ec0b7b58f86ea47dc9e00dd764300fa708f56905b61b9230",
      "kind": "transparent"
    },
    {
      "address": "0x2E2b04601ffC2E9ab7d6F7002FD5FeD1aBD3DdD6",
      "txHash": "0x56352a3722ac4f1293f1a56babcbf10eb287862e9ee98b4b399abe2f0d7f0146",
      "kind": "transparent"
    },
    {
      "address": "0xE6256548BD9836c6F1BA716dB64d92A5a4eE4D25",
      "txHash": "0xfefbd1a762da13858f95b3807868f63475ea4a7ad8708f1e6f78b19789932d3c",
      "kind": "transparent"
    },
    {
      "address": "0x0FDd193A1aa39C477fB39cFD1EA2DA69d5C0F4e7",
      "txHash": "0xf28e51cfa7b213cb31792e4548e4f052e1192412e1f1a48c968a14dcfea96ed8",
      "kind": "transparent"
    },
    {
      "address": "0xeA7F2a417ED19F92bf624f80BfB14049ecdA0736",
      "txHash": "0x89bb91821de38be1b009daeed18555644e00873fefb5e26543603aca76e9f7d9",
      "kind": "transparent"
    },
    {
      "address": "0xAcf871da4941F9623dCD09f880042d17a5065262",
      "txHash": "0x13faedb37153ca469a3014782402926edb815615cc58f49a0e88c1795d8d9605",
      "kind": "transparent"
    },
    {
      "address": "0xd55D9179E4EA9CbC92738AD2F35055Ed0248bc57",
      "txHash": "0x1f30c8881a72ca489803ebbc2483a1d9676bf599eeb33cea1231130590d6d59f",
      "kind": "transparent"
    },
    {
      "address": "0x01054e373c627A9616eeC887F56fF906FFe6fc39",
      "txHash": "0xfc0769a8dc4d64741007d37a9db6a3ef2b8d70146d71f9a9321d58afcb78c7fd",
      "kind": "transparent"
    },
    {
      "address": "0xB6Fe93009bfD58596B4Bc684d155eF2220796864",
      "txHash": "0xe77060815fc3339ace1dbb193189ce92e7e8d3858bc633b3f0480259d1e8c5d1",
      "kind": "transparent"
    },
    {
      "address": "0xFb0BB105C05dbB558713bEAD5901B1dbf249EB6e",
      "txHash": "0x64a37d614847be31cd895cf0b8fe782caaa41455253aadd698990305c72cbf4d",
      "kind": "transparent"
    },
    {
      "address": "0xBff511BD7C795a743eE8E3BedE0CEb1251C8D5fD",
      "txHash": "0x8afc67dd5492122b46dd3c1a621f27b1bd728252634801ee269c2899c5c06fa0",
      "kind": "transparent"
    },
    {
      "address": "0xF421B36224747583e993db1b9d10F02762a955Fb",
      "txHash": "0x9afddef4e4577b864548ed61a433714317370aff12e34e68a20a55c06334ed79",
      "kind": "transparent"
    },
    {
      "address": "0x4F18E0EdFc4c677521087C434F969Bd140aaF397",
      "txHash": "0xfa63c8cb0402f608264120c071f9afe1179990f30580928dddb42a69ce29363f",
      "kind": "transparent"
    },
    {
      "address": "0xB2cD0288e69017e811D9923815e389Db0fe4Aa0d",
      "txHash": "0x56b7d3bc290d05fde0d26592ee8fa711d9dc244389e44e613601ed3a795edd7a",
      "kind": "transparent"
    },
    {
      "address": "0xE165A6e7c9873667b0DA72a936f1a675e110a8Af",
      "txHash": "0x7e1a3393fb0c2d28bf158b1ebdd42be38f6060c3df1d08529128fde6e4e699bb",
      "kind": "transparent"
    },
    {
      "address": "0xEC66F75F2FC2ba3624dd67998CfC338C4712610F",
      "txHash": "0xfe5d25ae9e8e8ed0acf22a3f3dbd496b63555e2e84bf80cfe1425988b2f4718f",
      "kind": "transparent"
    },
    {
      "address": "0xDD32b18B042Ff47f8b261abCE437071cd3C7b888",
      "txHash": "0x3a8dcd4cd50a7992e8e6185cc4df1453cc808cb87770564faa819539242509ca",
      "kind": "transparent"
    },
    {
      "address": "0xEba652F081b53775A50a3Ff7d7CA19E093C1894B",
      "txHash": "0x2a6ca93fe189543993fad38e6c395ee5aaa3e097582fb11d65be9ddffade924e",
      "kind": "transparent"
    },
    {
      "address": "0x0531510b473aa25761cAdcBA3dcD0b6b4561Db80",
      "txHash": "0x45c5e0c53ba9d88fc79f4e60bc1b312ae7fb23956913445a26abb4572b1ffad9",
      "kind": "transparent"
    },
    {
      "address": "0xf14dF84de4c3a3731e72110dce86ce1d5afD0f87",
      "txHash": "0xc650e145ca0e01bf597c3c96f09dd04a025aea95293c2fcfdae98aa0bfc50f49",
      "kind": "transparent"
    },
    {
      "address": "0xbf655026aDfE60fB754857B291F1f3f83211DC1A",
      "txHash": "0x1dcf495912eeff3cd347a2242cbabd9948ea0cd7a380af00c6cd70bafd3944fc",
      "kind": "transparent"
    },
    {
      "address": "0x24f69ef380a46934731ed965147b7Ad95A6aF580",
      "txHash": "0x4950df60fcd7e639fd0fc05202aad889d0b9e5e5804ca576051c84d2cdc34ba8",
      "kind": "transparent"
    },
    {
      "address": "0x3A51FE2790f2Fc13e992fa582c63A88CB925154B",
      "txHash": "0xe08ff12624003d97e418d8bda65f921d08d13aded36433a3a65392198e7a55d8",
      "kind": "transparent"
    },
    {
      "address": "0x38eAeCC27A4772CD8112f9e0f9713082F199d359",
      "txHash": "0x9a93b3664e0591602c668634b29e6a7168fdc91360ca4180f7e7e420064a0e46",
      "kind": "transparent"
    },
    {
      "address": "0x8087beE1B50bE368f9C57e8eC703Dd7B113C33E6",
      "txHash": "0x0a01f2cdafcaba96969cb2fc6d741cc7ef6974c64e26c664815a76b8e0008370",
      "kind": "transparent"
    },
    {
      "address": "0x5062233EB5b11f7621dA178eCf9B862871F81BD5",
      "txHash": "0x5a080b4f80d917d17103faaf088bab0cf6491dade7e4171db4ad06a9b254e17a",
      "kind": "transparent"
    },
    {
      "address": "0xfD7925BBD96460033Cf897650e67E14e17c1E5dF",
      "txHash": "0xedfc38b8c1069f36410c980a106dce92f969ff5114f7bc5c12226b89a4efead4",
      "kind": "transparent"
    },
    {
      "address": "0x9eD01E2A7A6108c2aAdf913cB9251C92C3505EA7",
      "txHash": "0xf8887c195e92df61493cf1c808cf760d2d1b93d9e04409de9b80174913b549de",
      "kind": "transparent"
    },
    {
      "address": "0x9fC3f5f53a27fB698aA3448875c3064a418bb712",
      "txHash": "0xa98eb9515b0ef749d922f5ebe696b3b0452b536320cec9a6d814901367091093",
      "kind": "transparent"
    },
    {
      "address": "0xc1F80C5Ab9a1583d0Ece66E4DF02F54f99f7F577",
      "txHash": "0x4c4ba3a5861598d0fbcd36fdff30c68098188313d5dd5d95377b5db98dd2d80b",
      "kind": "transparent"
    },
    {
      "address": "0xb33902e1f7aBd319E6E46097B40930b7a3dd5E04",
      "txHash": "0x21e93a714486cab3e6d4fc295b557d72ddd39f1db276a5e5c4fd03b18b2f8245",
      "kind": "transparent"
    },
    {
      "address": "0x46283DE6b81050EE898f4CB0e6e62A1C5e916612",
      "txHash": "0x62aae39a6e4b8cd8913c2d907e57a7d07dcd0d90d60cbce5783f287c8fbbe0c8",
      "kind": "transparent"
    },
    {
      "address": "0x04a72E6fC15F898C7bfB893482535eb8B2f4D70B",
      "txHash": "0x6593ea749aafd17c643d6427adbe520406696db96c4750fec443267d4dd5e599",
      "kind": "transparent"
    },
    {
      "address": "0x07f74519C4C59888cb2794762b926c777b4ABA77",
      "txHash": "0xc4a1f3d1d5896667e0ffae2aaab7f730bfe21623617f7342ddf9c0a337df5e1f",
      "kind": "transparent"
    },
    {
      "address": "0xF8ed10417Cd6cdc74deB6B7c6C605DE9CBf1a5d5",
      "txHash": "0x37bef5963f93171695b42790bc0b58cff635e0781372df672bfc098872a68871",
      "kind": "transparent"
    },
    {
      "address": "0x4eE03A8580210768Ec2a138906E12dCa776Ee416",
      "txHash": "0x95c85038ea38459541b69efae752c1284f1b0ce94ea55db580f09f242f36dc52",
      "kind": "transparent"
    },
    {
      "address": "0xBd23Cf0a68a9d93e71a7469Af6Dc0c2036C78F1a",
      "txHash": "0xd31da41a08660b5c270580550a0c8442ece660f6446c90a7248240f6d08f2ee4",
      "kind": "transparent"
    },
    {
      "address": "0x7bDAD30323d6789b5FABAFc3114bF17B2D7bcD37",
      "txHash": "0x98e6a16636bb24ada1374ace380f3658f08539a3ef0198146c77567e86a798f3",
      "kind": "transparent"
    },
    {
      "address": "0x454acA2625ABBe6038B0Cd2375C54695470873bc",
      "txHash": "0xcb6b06c812f5534c303d2792f0d765148cbae1723c52aad6d7959e3fc16b790f",
      "kind": "transparent"
    },
    {
      "address": "0xa10712F5f65F9F193B780242c5726ea6Dd61e292",
      "txHash": "0x2a44b2d947598385599a0529f030596ee08d53da1a6da6702098c06dfddb3da1",
      "kind": "transparent"
    },
    {
      "address": "0xcE9444EDd99060B6973062039811f67bcDDC5Ede",
      "txHash": "0x235e43df6a2eb0e28087f8f9a81b9a8aa3e5e891ead4e0e56b364941683d3594",
      "kind": "transparent"
    },
    {
      "address": "0xa098CBc99A59efF84A7C8457f4A45fc6a732559E",
      "txHash": "0x8276fd1e93ade492d38deeb7844d0b24079dc1f0536cdc7eb6722463bf379f62",
      "kind": "transparent"
    },
    {
      "address": "0xC56Fc3469B0B3802E9E258158B808745b92c1662",
      "txHash": "0xfbfa9f224707a97a630a000d96b64f040ec7ef4a7602403cff36056d5eb7e6ac",
      "kind": "transparent"
    },
    {
      "address": "0xd357C0Ca469e7e44a9B556A9c3EeBdC989dC9A89",
      "txHash": "0x729fe2dad092513438dde74d3e4552331a7bb5d954f2d63e15c76307bdb2c27f",
      "kind": "transparent"
    },
    {
      "address": "0x1528970C083EDbC7f7C8416B4e0573c55aB6EbA1",
      "txHash": "0x5fd376d3015422ed241699a93ef06e0bff79fcbdd576442c0df3ee9dbc3b1bec",
      "kind": "transparent"
    },
    {
      "address": "0x47BA3B7e674f346f44Ee78375C03F975031EF952",
      "txHash": "0x618a22098f1ea7f2313f98034e1ea1bc7cdf649209cb21402dfd75b2dd01a583",
      "kind": "transparent"
    },
    {
      "address": "0x0618B3ba2Ccc55fdEFA642Da85c753bC1Bed0b33",
      "txHash": "0xe1c784dbd54bb0c9bee13cb5b0817a82956a119c7f2cb057eceaa20158e70b96",
      "kind": "transparent"
    },
    {
      "address": "0x28B66F05AF933EEfb147c4bf13eCFA6f1cc4EE5B",
      "txHash": "0x2a3eacb70368944c928a73324e3daf241cbc8ede3185349ab4bcad3c92e87a28",
      "kind": "transparent"
    },
    {
      "address": "0x08079dF82F951c5626a7F215b908254A5DbeBeC1",
      "txHash": "0xf7881b15b4fa6c478aa21931b7b4d473e747162f762f854b5d6d2f1c54a7c1a8",
      "kind": "transparent"
    },
    {
      "address": "0x4F03Eb0b4a11CD011fe2E3122d0cd28D6e373D75",
      "txHash": "0xbb80e6f6bfc5cb69f9046afddc683cf5e919d8d25bffb6dfc806b75f3c54a7a0",
      "kind": "transparent"
    },
    {
      "address": "0x5F8E1Eec7aCb45a164bD2B1Dd3716d1FbD527604",
      "txHash": "0x0ee9a6fb4b3727a4ff75025d3c4ee586db66f5f1ec6314d193a9d2efbc0b1ba4",
      "kind": "transparent"
    },
    {
      "address": "0xF32ceB9369Ef48ba4dc5735fE7F807FB8aEF0aAf",
      "txHash": "0xf6f67271695b32f3bddf9402ceb07ae75a0cc673d7b4019fc7cafbf95840fc58",
      "kind": "transparent"
    },
    {
      "address": "0x5F596Af23691773eA2f7d9705009a9B36a671A4F",
      "txHash": "0x39f76e177bda1672582775524954534aef3a1edae9584a6d6a377c415367e504",
      "kind": "transparent"
    },
    {
      "address": "0x6b2869033175871C2D1461b772D95C11338598f5",
      "txHash": "0x8dc1624cbe88627d7d2882b7407c0dc0e13ec07ee09aec40c67b4c6922af6821",
      "kind": "transparent"
    },
    {
      "address": "0x11a944b1A42Ba026361A4FE30896E073B51424EC",
      "txHash": "0x771e569968541c66b7650f6f314e046468ea47013a96db0964958e69cc147a3b",
      "kind": "transparent"
    },
    {
      "address": "0x2AE227c3d4c947e683A065984a65144529e22494",
      "txHash": "0x42e2bd9d159b4c2094f091aa8f7a447c22b5b691641e85f311fa56b9a20c78b9",
      "kind": "transparent"
    },
    {
      "address": "0xe751303026624D3A3165d71d01ab4fEE19De0f83",
      "txHash": "0xb2fb12485a1075d5075c9fb41d325d01a1671298aef73405c4243006ab28fc4a",
      "kind": "transparent"
    },
    {
      "address": "0x6BC29D17eE916929426473225a09B009B4114d82",
      "txHash": "0x55b5cbd0b21a55f96b54cc4c668d56297c77287b59ac53c62f2cf3b2dff2ae62",
      "kind": "transparent"
    },
    {
      "address": "0x08F5452433B524913cd6b9d869cA80cbD7792eed",
      "txHash": "0x018f35e29f000b18b7930069c88ede87d8fa7baff4f8657f9a6ddcd28dd30196",
      "kind": "transparent"
    },
    {
      "address": "0x66e1671C2F411bC9114aF8aEe71f4E1e5a59635E",
      "txHash": "0x3a72691fc7240ca55f72f3533090345c04d87534d7246f521931c6d27b2adc10",
      "kind": "transparent"
    },
    {
      "address": "0x1E8dDe2D6f6bC3CF2983E1B2E88C565193BD514F",
      "txHash": "0xae887489d99912fa16537a78c01c5efcd2ee3182e0cbba2137aaede39322224b",
      "kind": "transparent"
    },
    {
      "address": "0xdbc44f5Be6fACfaD46F7a148c434B0118D15Cf75",
      "txHash": "0xa77fe0c5124be5d4e4ab0b5462294acea8ea6a5591d6b9424649a373a64f2115",
      "kind": "transparent"
    },
    {
      "address": "0x04368E9013bc3A43487374eDbAcEE9998A712090",
      "txHash": "0x189b30d1861ce45d911933c5df1dc92898fafaa687d4d33cbc83d0b4aa4a198d",
      "kind": "transparent"
    },
    {
      "address": "0x6e2b64bd19B8AE0b3422af5182db8Eb45c4D1cb0",
      "txHash": "0x14eebead170d326a9349a2e962c49eb0212671a792122e0d8f5671a430ef3a59",
      "kind": "transparent"
    },
    {
      "address": "0x8647B247688F2e9418161c4e4849a017480060A2",
      "txHash": "0x6c60a348c3c2710de57f0f8c84fb39e61d676c5f11cf7178106f6044e3b094e7",
      "kind": "transparent"
    },
    {
      "address": "0x570baB9d156b961b20D683fFe131549a1B8A739A",
      "txHash": "0x1aaed27934454ff4b9d33cab039d4a59bb18233fa8f8405d0af4ef709cb26a8c",
      "kind": "transparent"
    },
    {
      "address": "0x3424BdceD9E0551cf3800A725CB28c8Ba11b42a0",
      "txHash": "0x53e2459b00ec09f3b453253b6cc1d2ecbadaa6bd8665edbd0db6dc3353a4aebe",
      "kind": "transparent"
    },
    {
      "address": "0x6e876ad13A5b6aD456dc7342Afc03Ade884dB1e1",
      "txHash": "0x948f0da68abb3c148da27a8c0e307c31c3791e1f841baa7362f2557ad9967792",
      "kind": "transparent"
    },
    {
      "address": "0x43beFd99E60ffE4b2745f21404CCb10bEDdE99d2",
      "txHash": "0xe25d5cc0ca3675c7b6aa0b9372b2ed5c9a6a7b43fbfb49e8690de3064e593f68",
      "kind": "transparent"
    },
    {
      "address": "0x303BbfF1106191080efA0f510557e596F20069b7",
      "txHash": "0xcf47d48767801b80ebc0263e4df274ac48715debfa00a301a777e16581c18887",
      "kind": "transparent"
    },
    {
      "address": "0x33b4E6fb015D30901F88a70e9B998e8eCdCd9408",
      "txHash": "0xb45f923774dcb9d6d33f6c0169f7d960197f552a6558a81c718e8c747e080b7f",
      "kind": "transparent"
    },
    {
      "address": "0xfBb04fbe829B5195d4C5382b298B8f68aB1Bb8Bc",
      "txHash": "0x70184a865d1f9bcc162ac08f7a80e120a374dbccfea7b7bc61c929a60677acb7",
      "kind": "transparent"
    },
    {
      "address": "0x7aBC0B856CE525f09019a68ba0fB3c601EDcaF80",
      "txHash": "0xcdce464fd02e21304bc9c55f8b39b66399d35392c6e0214d8a016e8c075790f9",
      "kind": "transparent"
    },
    {
      "address": "0xD3430d6eEF88bf9f130aE00F21f99221BF667577",
      "txHash": "0x8cc0159dc3aedb05a0d3d423433e93a8bf127bb0d0d9f870c5def6d7026ad863",
      "kind": "transparent"
    },
    {
      "address": "0xF70a0c38a11ffCb3388a2eD67dEFC195FF4571d8",
      "txHash": "0x72097e53f42a5a48e2c86cf9a928de4880f06d6c9be3bd73b0a6dca468a2fb5f",
      "kind": "transparent"
    },
    {
      "address": "0x9ca297Df61e55FA274e25eC9D3B51C162460EE37",
      "txHash": "0x489e2a952724bec99fd0b7b3607e326a099eeef62626a800a5a7d178ff18ca40",
      "kind": "transparent"
    },
    {
      "address": "0xfe13e741B3e4536De88a25ec6fEe7d1012352A07",
      "txHash": "0x5b68e38de9ec31a0eddc681ce0dce97ad668d4b179ef895d8b99a56c25bcfdef",
      "kind": "transparent"
    },
    {
      "address": "0xC88a869E12a149a1A362784596A444284493E2DD",
      "txHash": "0x46c3ce286324582867935aab837f93e0284cf47292a634de0542ce0dd8800a86",
      "kind": "transparent"
    },
    {
      "address": "0xd53bCe6A0e4A07FdcafDC6496Ce76024B7087DB9",
      "txHash": "0x5110c8d6a7aa61874e7a18d4d86ebf268fcaa7f7877b18c3d2bce0aca3123568",
      "kind": "transparent"
    },
    {
      "address": "0x194F3D8987aE53d0c6f310d2189Fb06EA21b2746",
      "txHash": "0xfc22124d84c1c30e2ce65e8410923c90d5888ecef11595eda76d2a223ca4d294",
      "kind": "transparent"
    },
    {
      "address": "0x0Ab475B5b923CeE792D440bC1e48fb53CabC4Ae2",
      "txHash": "0xdef80bc7cd881a422cced6481481f12342ab348ad8ab6174f75ac338ad9abf13",
      "kind": "transparent"
    },
    {
      "address": "0xba821ee81b3f6b8844Bb8974985b870d383ECAfF",
      "txHash": "0x9b583c6fbd2405955cac183866fe5f439e68eeb8a756dc94a9a56ab7757cd63b",
      "kind": "transparent"
    },
    {
      "address": "0xb997B6fC3aD06aa282e89Dd95d85326F1420B0E5",
      "txHash": "0x20fd21500adf1198faeae7603ef6858e5037fc961ed2f9590abad6cf4a0d6f15",
      "kind": "transparent"
    },
    {
      "address": "0x6cEa49bA262Fc125cd06D7B5510497A4d5aAFf6b",
      "txHash": "0xfdcad3af1d5ba4ba921a601e947dac73e7e99c029609d9c2da8043c8b5b0e0d5",
      "kind": "transparent"
    },
    {
      "address": "0xb6cA4DEce39AD882e4255F20B5391F7013898722",
      "txHash": "0x517ae13c9f24696c83ab46fe01658290154f1374a0a9ef6a5f209a93c964a623",
      "kind": "transparent"
    },
    {
      "address": "0xF33CB9Dbe105ad0358d1405ca823cFDD1429C9b1",
      "txHash": "0x3d07ea4272a0ed38a073b5baf993c58fcc166da163c90a8cf9830745f39c925c",
      "kind": "transparent"
    },
    {
      "address": "0x71b34CEB1F3bcD0Eeff2895F6bbf9960D69b6B6b",
      "txHash": "0xf15432d80620a5daba0cfa4161e0d60cc2fe1a69f582c6d35252b4f7542a9bbd",
      "kind": "transparent"
    },
    {
      "address": "0x879078275110e22904CA335234fD78A46396B287",
      "txHash": "0x5547b3a0029163e1934b6ae3bcaf25b6ea69bc02f8f9b29262ca295be958c7df",
      "kind": "transparent"
    },
    {
      "address": "0x0Af46dE957993FECcE35eaE9923cdb3b6a27b123",
      "txHash": "0xa1f9e9ee674dc6c51342a7bf0ac2a6c9e3f326f6515ce574c687af5d2fa12358",
      "kind": "transparent"
    },
    {
      "address": "0xeAaF56F3a0539f6C1F5f9CB4aaE9E9e6E5b97Bbd",
      "txHash": "0x1a9e9829875680510fda6018b06752354a2eabc157e34b8773c141b20b2dcc6e",
      "kind": "transparent"
    },
    {
      "address": "0x649Edd97219c4cc4CdC462abADF37333405a5ABE",
      "txHash": "0xbb16f747874b0da7df8fe451c84452895417bf09dcdb1e95fee9d5310d4424c8",
      "kind": "transparent"
    },
    {
      "address": "0xe240794A547F4CE35F93212C5184072695BD1A31",
      "txHash": "0x4a03d5a86fc0a85461abf29db6334c579fad5229b7380cbd41ede008d06565a4",
      "kind": "transparent"
    },
    {
      "address": "0x429E098a2c0B3691050eE49B41cf779ee89B4fCF",
      "txHash": "0x6e5044131a0ebf467b9b129bd59e1498a7aaf9183cedad7512f804a71b29b822",
      "kind": "transparent"
    },
    {
      "address": "0x1D34c249344d4dCd256C5E9188aED346CFB5dB2A",
      "txHash": "0xc8f0912d6762ef85e39fa11321337886fd570a05b4101c7f84f7be51e483efb0",
      "kind": "transparent"
    },
    {
      "address": "0xf8a35DACD3Fe3e0b528AFD8Cab92F7000e97cb53",
      "txHash": "0x73bae347c87ad87debe91ea625734c943b762f045aaca857bdf55a8df75bf2bf",
      "kind": "transparent"
    },
    {
      "address": "0x247a26578f6C8D52959dCe3baDD41EaDD77278c8",
      "txHash": "0x6c8b29836a33d40266b514e62870fd80787e68d245558b7e049902d1d4762765",
      "kind": "transparent"
    },
    {
      "address": "0x9eb7B05f77C1A15715a204b4B5A57A011008630E",
      "txHash": "0x1d4722cdab0754a6e03e71a01e38609efb0c8e44db42516e932381189b884456",
      "kind": "transparent"
    },
    {
      "address": "0xcD098e507F6803C10F0925C33c722873F541b4c9",
      "txHash": "0x663425188574fd509f11f61804916e445b2bcda485bb4c728a21bcea2e51eab3",
      "kind": "transparent"
    }
  ],
  "impls": {
    "0dbd30e094ddcb776534ac8bed000391a5986d5c0b5888a588f23b150df13efb": {
      "address": "0x2f8bBde938AB80eeDBc42475d63351c977586f6b",
      "txHash": "0x01d19218044af56dec5aacf1a6ecd567b3c6020d6c461994a5a8d7a81e8d9c6b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ea823a44be99bdeed12f203eba06d91bce747f59bd9720e7c55aa4fa377a5637": {
      "address": "0x5724bAF9D866B66B11861A880fb630eFfAa76422",
      "txHash": "0x5e092b5cd0657d499f7c597fd3f6081b4f3c2ea83c1462ab2ce0f9c054007a0e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "NetworkRegistry",
            "label": "isMember",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/NetworkRegistry.sol:22"
          },
          {
            "contract": "NetworkRegistry",
            "label": "isOperator",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/NetworkRegistry.sol:23"
          },
          {
            "contract": "NetworkRegistry",
            "label": "operators",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/NetworkRegistry.sol:24"
          },
          {
            "contract": "NetworkRegistry",
            "label": "members",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/NetworkRegistry.sol:25"
          },
          {
            "contract": "NetworkRegistry",
            "label": "walletDeployer",
            "type": "t_address",
            "src": "contracts/NetworkRegistry.sol:26"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e130d625c00c75a7b5d83a93665a3b812367db7a71cb03b276bb289f23e47938": {
      "address": "0x8DbaD9DA1Dd5FfAFa770789DAb286095d3cfB7E1",
      "txHash": "0x2361b331d51be8b494bfdf75359bb329fe404ec37ed71c373ac96793cd9e355b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a57b633a4c098d30fef3052fdc1706f1cdedd5857b25ee06f119d9a334dbb489": {
      "address": "0x4d55A89dff00B6B651F57554B9A45ce41347Ffb8",
      "txHash": "0x9bc649125901ae1334f9ac3863941d682716a616b8fb238037eee053f71336fe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "UnderwriteManager",
            "label": "collateralToken",
            "type": "t_contract(IERC20)1055",
            "src": "contracts/UnderwriteManager.sol:23"
          },
          {
            "contract": "UnderwriteManager",
            "label": "creditLines",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(CreditLine)2499_storage))",
            "src": "contracts/UnderwriteManager.sol:26"
          },
          {
            "contract": "UnderwriteManager",
            "label": "networks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/UnderwriteManager.sol:27"
          },
          {
            "contract": "UnderwriteManager",
            "label": "underwriters",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/UnderwriteManager.sol:28"
          },
          {
            "contract": "UnderwriteManager",
            "label": "isActive",
            "type": "t_bool",
            "src": "contracts/UnderwriteManager.sol:29"
          },
          {
            "contract": "UnderwriteManager",
            "label": "totalCollateral",
            "type": "t_uint256",
            "src": "contracts/UnderwriteManager.sol:30"
          }
        ],
        "types": {
          "t_contract(IERC20)1055": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(CreditLine)2499_storage))": {
            "label": "mapping(address => mapping(address => struct UnderwriteManager.CreditLine))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(CreditLine)2499_storage)": {
            "label": "mapping(address => struct UnderwriteManager.CreditLine)"
          },
          "t_struct(CreditLine)2499_storage": {
            "label": "struct UnderwriteManager.CreditLine",
            "members": [
              {
                "label": "collateral",
                "type": "t_uint256"
              },
              {
                "label": "networkToken",
                "type": "t_address"
              },
              {
                "label": "issueDate",
                "type": "t_uint256"
              },
              {
                "label": "reward",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "65d88fa13cb6ece4227f5a991f3a3b4666e1fd254d1cd2e6bfcb50ef6f00984d": {
      "address": "0xFB3c28da3da9934151bB9bB26c97B9C8B5096968",
      "txHash": "0x7aec9bd4d630ceee59e7dcf07d9e8bd85d21100ce36e48c02da3fc9c6e3be5c0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:50"
          },
          {
            "contract": "CIP36",
            "label": "_members",
            "type": "t_mapping(t_address,t_struct(Member)1159_storage)",
            "src": "contracts/CIP36.sol:16"
          },
          {
            "contract": "RUSD",
            "label": "registry",
            "type": "t_contract(NetworkRegistry)2009",
            "src": "contracts/RUSD.sol:42"
          },
          {
            "contract": "RUSD",
            "label": "underwriteManager",
            "type": "t_contract(UnderwriteManager)3400",
            "src": "contracts/RUSD.sol:43"
          },
          {
            "contract": "RUSD",
            "label": "operator",
            "type": "t_address",
            "src": "contracts/RUSD.sol:44"
          },
          {
            "contract": "RUSD",
            "label": "restrictionState",
            "type": "t_enum(Restriction)2022",
            "src": "contracts/RUSD.sol:46"
          },
          {
            "contract": "RUSD",
            "label": "restrictionRenewal",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:47"
          },
          {
            "contract": "RUSD",
            "label": "expirationSeconds",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:48"
          }
        ],
        "types": {
          "t_contract(NetworkRegistry)2009": {
            "label": "contract NetworkRegistry"
          },
          "t_contract(UnderwriteManager)3400": {
            "label": "contract UnderwriteManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(Restriction)2022": {
            "label": "enum RUSD.Restriction",
            "members": [
              "REGISTERED",
              "POSITIVE",
              "NONE"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Member)1159_storage)": {
            "label": "mapping(address => struct CIP36.Member)"
          },
          "t_struct(Member)1159_storage": {
            "label": "struct CIP36.Member",
            "members": [
              {
                "label": "creditBalance",
                "type": "t_uint128"
              },
              {
                "label": "creditLimit",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e871513d96c51da850b6e61aa1f9f29a5a7557dc89bfda4463bcbaa7faa52e61": {
      "address": "0x847524c0d11e10BaEf4Cef2371FA3876555f3F9a",
      "txHash": "0x2f77529c3ad3cda453e4b2f6b638166523d4432394ce113c0b14578c8af14660",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC20SOUL",
            "label": "isStakableContract",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ERC20SOUL.sol:26"
          },
          {
            "contract": "ERC20SOUL",
            "label": "locks",
            "type": "t_mapping(t_address,t_struct(Lock)1491_storage)",
            "src": "contracts/ERC20SOUL.sol:27"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Lock)1491_storage)": {
            "label": "mapping(address => struct ERC20SOUL.Lock)"
          },
          "t_struct(Lock)1491_storage": {
            "label": "struct ERC20SOUL.Lock",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "schedules",
                "type": "t_array(t_struct(Schedule)1496_storage)dyn_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Schedule)1496_storage)dyn_storage": {
            "label": "struct ERC20SOUL.Schedule[]"
          },
          "t_struct(Schedule)1496_storage": {
            "label": "struct ERC20SOUL.Schedule",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "expiration",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fa4b1c36653882739bd40333a63be385b498f70891b55bb9ba01e6133682d831": {
      "address": "0x58A89dc547828D240f7d732b9Fc296B804668A55",
      "txHash": "0x5bf114e251e2e6fb28b3ed73c504b0d7eb0ece7f426d0e64ad85e5c44df5483f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "UnderwriteManager",
            "label": "collateralToken",
            "type": "t_contract(IERC20)1055",
            "src": "contracts/UnderwriteManager.sol:23"
          },
          {
            "contract": "UnderwriteManager",
            "label": "creditLines",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(CreditLine)2503_storage))",
            "src": "contracts/UnderwriteManager.sol:26"
          },
          {
            "contract": "UnderwriteManager",
            "label": "underwritees",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/UnderwriteManager.sol:28"
          },
          {
            "contract": "UnderwriteManager",
            "label": "networks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/UnderwriteManager.sol:29"
          },
          {
            "contract": "UnderwriteManager",
            "label": "underwriters",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/UnderwriteManager.sol:30"
          },
          {
            "contract": "UnderwriteManager",
            "label": "isActive",
            "type": "t_bool",
            "src": "contracts/UnderwriteManager.sol:31"
          },
          {
            "contract": "UnderwriteManager",
            "label": "totalCollateral",
            "type": "t_uint256",
            "src": "contracts/UnderwriteManager.sol:32"
          }
        ],
        "types": {
          "t_contract(IERC20)1055": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(CreditLine)2503_storage))": {
            "label": "mapping(address => mapping(address => struct UnderwriteManager.CreditLine))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(CreditLine)2503_storage)": {
            "label": "mapping(address => struct UnderwriteManager.CreditLine)"
          },
          "t_struct(CreditLine)2503_storage": {
            "label": "struct UnderwriteManager.CreditLine",
            "members": [
              {
                "label": "collateral",
                "type": "t_uint256"
              },
              {
                "label": "networkToken",
                "type": "t_address"
              },
              {
                "label": "issueDate",
                "type": "t_uint256"
              },
              {
                "label": "reward",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7c8f5ca097da823bd0b949921b5160d589e6635063cdd847cfd0f4488caeb03a": {
      "address": "0xE3d905df132a421962BF624B83E705EE3F545392",
      "txHash": "0xad3c5ad7b3501fddd41857aaf80163555463f4b2ed13cc94021ae045d5f655b8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC20SOUL",
            "label": "isStakeableContract",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SOURCE/ERC20SOUL.sol:35"
          },
          {
            "contract": "ERC20SOUL",
            "label": "locks",
            "type": "t_mapping(t_address,t_struct(Lock)946_storage)",
            "src": "contracts/SOURCE/ERC20SOUL.sol:36"
          },
          {
            "contract": "ERC20SOUL",
            "label": "minLockTime",
            "type": "t_uint256",
            "src": "contracts/SOURCE/ERC20SOUL.sol:37"
          },
          {
            "contract": "ERC20SOUL",
            "label": "maxLockTime",
            "type": "t_uint256",
            "src": "contracts/SOURCE/ERC20SOUL.sol:38"
          },
          {
            "contract": "ERC20SOUL",
            "label": "maxSchedules",
            "type": "t_uint256",
            "src": "contracts/SOURCE/ERC20SOUL.sol:39"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Lock)946_storage)": {
            "label": "mapping(address => struct ERC20SOUL.Lock)"
          },
          "t_struct(Lock)946_storage": {
            "label": "struct ERC20SOUL.Lock",
            "members": [
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "amountStaked",
                "type": "t_uint256"
              },
              {
                "label": "schedules",
                "type": "t_array(t_struct(Schedule)951_storage)dyn_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Schedule)951_storage)dyn_storage": {
            "label": "struct ERC20SOUL.Schedule[]"
          },
          "t_struct(Schedule)951_storage": {
            "label": "struct ERC20SOUL.Schedule",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "expirationBlock",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0b27f811537cd04aced05bd4bd6cca83ea69e229dd235916394391959e2c7154": {
      "address": "0x2fFDcC34D356C77D1e58319c3d6960aE2059967c",
      "txHash": "0x1b10364caf2752e449f995afe47e2a86379a83fc36c6b5b07fa296ffddc59b73",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC20SOUL",
            "label": "isStakeableContract",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SOURCE/ERC20SOUL.sol:35"
          },
          {
            "contract": "ERC20SOUL",
            "label": "locks",
            "type": "t_mapping(t_address,t_struct(Lock)13599_storage)",
            "src": "contracts/SOURCE/ERC20SOUL.sol:36"
          },
          {
            "contract": "ERC20SOUL",
            "label": "minLockTime",
            "type": "t_uint256",
            "src": "contracts/SOURCE/ERC20SOUL.sol:37"
          },
          {
            "contract": "ERC20SOUL",
            "label": "maxLockTime",
            "type": "t_uint256",
            "src": "contracts/SOURCE/ERC20SOUL.sol:38"
          },
          {
            "contract": "ERC20SOUL",
            "label": "maxSchedules",
            "type": "t_uint256",
            "src": "contracts/SOURCE/ERC20SOUL.sol:39"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Lock)13599_storage)": {
            "label": "mapping(address => struct ERC20SOUL.Lock)"
          },
          "t_struct(Lock)13599_storage": {
            "label": "struct ERC20SOUL.Lock",
            "members": [
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "amountStaked",
                "type": "t_uint256"
              },
              {
                "label": "schedules",
                "type": "t_array(t_struct(Schedule)13604_storage)dyn_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Schedule)13604_storage)dyn_storage": {
            "label": "struct ERC20SOUL.Schedule[]"
          },
          "t_struct(Schedule)13604_storage": {
            "label": "struct ERC20SOUL.Schedule",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "expirationBlock",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bff42ded00b9acd258bc66ec8f9abe625a48fe0e9a2c8edba4584e6175036356": {
      "address": "0x2f2a5Ee0e648Ddeb9a5E781aE8283A538a2605Ff",
      "txHash": "0xbf2acd7ba43a0e9d6e9746a8bf968029913c4eb717458697bce42eea65628e4c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:50"
          },
          {
            "contract": "CIP36",
            "label": "_members",
            "type": "t_mapping(t_address,t_struct(Member)1159_storage)",
            "src": "contracts/CIP36/CIP36.sol:16"
          },
          {
            "contract": "RUSD",
            "label": "registry",
            "type": "t_contract(NetworkRegistry)2009",
            "src": "contracts/CIP36/RUSD.sol:40"
          },
          {
            "contract": "RUSD",
            "label": "underwriteManager",
            "type": "t_contract(UnderwriteManager)3388",
            "src": "contracts/CIP36/RUSD.sol:41"
          },
          {
            "contract": "RUSD",
            "label": "operator",
            "type": "t_address",
            "src": "contracts/CIP36/RUSD.sol:42"
          },
          {
            "contract": "RUSD",
            "label": "restrictionState",
            "type": "t_enum(Restriction)2020",
            "src": "contracts/CIP36/RUSD.sol:44"
          },
          {
            "contract": "RUSD",
            "label": "restrictionRenewal",
            "type": "t_uint256",
            "src": "contracts/CIP36/RUSD.sol:45"
          },
          {
            "contract": "RUSD",
            "label": "restrictionExpiration",
            "type": "t_uint256",
            "src": "contracts/CIP36/RUSD.sol:46"
          }
        ],
        "types": {
          "t_contract(NetworkRegistry)2009": {
            "label": "contract NetworkRegistry"
          },
          "t_contract(UnderwriteManager)3388": {
            "label": "contract UnderwriteManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(Restriction)2020": {
            "label": "enum RUSD.Restriction",
            "members": [
              "REGISTERED",
              "POSITIVE",
              "NONE"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Member)1159_storage)": {
            "label": "mapping(address => struct CIP36.Member)"
          },
          "t_struct(Member)1159_storage": {
            "label": "struct CIP36.Member",
            "members": [
              {
                "label": "creditBalance",
                "type": "t_uint128"
              },
              {
                "label": "creditLimit",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d5fe3aa6a7511b2d4db389e3b3abc049f5b249c1f49fa5ac407c88ed46164c8c": {
      "address": "0x3Bd2fF49A90B7DF9A1e47751e13e7354c080989E",
      "txHash": "0x4abdf15066d88b78b3bac94b38019b96643267bdaf08f1fb251dd37b7fd785a7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC20SOUL",
            "label": "isStakeableContract",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SOURCE/ERC20SOUL.sol:35"
          },
          {
            "contract": "ERC20SOUL",
            "label": "locks",
            "type": "t_mapping(t_address,t_struct(Lock)7402_storage)",
            "src": "contracts/SOURCE/ERC20SOUL.sol:36"
          },
          {
            "contract": "ERC20SOUL",
            "label": "minLockTime",
            "type": "t_uint256",
            "src": "contracts/SOURCE/ERC20SOUL.sol:37"
          },
          {
            "contract": "ERC20SOUL",
            "label": "maxLockTime",
            "type": "t_uint256",
            "src": "contracts/SOURCE/ERC20SOUL.sol:38"
          },
          {
            "contract": "ERC20SOUL",
            "label": "maxSchedules",
            "type": "t_uint256",
            "src": "contracts/SOURCE/ERC20SOUL.sol:39"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Lock)7402_storage)": {
            "label": "mapping(address => struct ERC20SOUL.Lock)"
          },
          "t_struct(Lock)7402_storage": {
            "label": "struct ERC20SOUL.Lock",
            "members": [
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "amountStaked",
                "type": "t_uint256"
              },
              {
                "label": "schedules",
                "type": "t_array(t_struct(Schedule)7407_storage)dyn_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Schedule)7407_storage)dyn_storage": {
            "label": "struct ERC20SOUL.Schedule[]"
          },
          "t_struct(Schedule)7407_storage": {
            "label": "struct ERC20SOUL.Schedule",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "expirationBlock",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "add8cf08c72d004f7320e232380ed0132b56f330b9df43b1dd353ebfd52d49f4": {
      "address": "0xA7922C4731d0a25A68F140D36Bc88d548c8a86E7",
      "txHash": "0x87f9dee95812636f928e9467027a54d75f550a2a8b13f0357c2b34c696b6d073",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC20SOULV2",
            "label": "isStakeableContract",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:39"
          },
          {
            "contract": "ERC20SOULV2",
            "label": "locks",
            "type": "t_mapping(t_address,t_struct(Lock)956_storage)",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:40"
          },
          {
            "contract": "ERC20SOULV2",
            "label": "minLockTime",
            "type": "t_uint256",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:41"
          },
          {
            "contract": "ERC20SOULV2",
            "label": "maxLockTime",
            "type": "t_uint256",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:42"
          },
          {
            "contract": "ERC20SOULV2",
            "label": "maxSchedules",
            "type": "t_uint256",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:43"
          },
          {
            "contract": "ERC20SOULV2",
            "label": "totalLocked",
            "type": "t_uint256",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:44"
          },
          {
            "contract": "ERC20SOULV2",
            "label": "_upgradeV2",
            "type": "t_bool",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:45"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Lock)956_storage)": {
            "label": "mapping(address => struct ERC20SOULV2.Lock)"
          },
          "t_struct(Lock)956_storage": {
            "label": "struct ERC20SOULV2.Lock",
            "members": [
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "amountStaked",
                "type": "t_uint256"
              },
              {
                "label": "schedules",
                "type": "t_array(t_struct(Schedule)961_storage)dyn_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Schedule)961_storage)dyn_storage": {
            "label": "struct ERC20SOULV2.Schedule[]"
          },
          "t_struct(Schedule)961_storage": {
            "label": "struct ERC20SOULV2.Schedule",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "expirationBlock",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6825feef95bb766b8e00e706e4b77c88f4ad8b04c0e17bc0bb2797c54201469f": {
      "address": "0xEDF72a015d28D7aE57aFFa46Db2B291d2Af180c6",
      "txHash": "0x896de2094e52da109e0614f1143102c13e5a06467ed5c05df02017be1e616b1b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "TokenClaim",
            "label": "_token",
            "type": "t_contract(IERC20SOUL)15210",
            "src": "contracts/SOURCE/TokenClaim.sol:23"
          },
          {
            "contract": "TokenClaim",
            "label": "claims",
            "type": "t_mapping(t_address,t_struct(Claim)15293_storage)",
            "src": "contracts/SOURCE/TokenClaim.sol:24"
          },
          {
            "contract": "TokenClaim",
            "label": "totalClaimable",
            "type": "t_uint256",
            "src": "contracts/SOURCE/TokenClaim.sol:25"
          }
        ],
        "types": {
          "t_contract(IERC20SOUL)15210": {
            "label": "contract IERC20SOUL"
          },
          "t_mapping(t_address,t_struct(Claim)15293_storage)": {
            "label": "mapping(address => struct TokenClaim.Claim)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Claim)15293_storage": {
            "label": "struct TokenClaim.Claim",
            "members": [
              {
                "label": "unlockedAmount",
                "type": "t_uint256"
              },
              {
                "label": "lock",
                "type": "t_struct(Lock)15103_storage"
              },
              {
                "label": "released",
                "type": "t_bool"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Lock)15103_storage": {
            "label": "struct IERC20SOUL.Lock",
            "members": [
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "amountStaked",
                "type": "t_uint256"
              },
              {
                "label": "schedules",
                "type": "t_array(t_struct(Schedule)15108_storage)dyn_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(Schedule)15108_storage)dyn_storage": {
            "label": "struct IERC20SOUL.Schedule[]"
          },
          "t_struct(Schedule)15108_storage": {
            "label": "struct IERC20SOUL.Schedule",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "expirationBlock",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8c16622965739c01242b44307c172db73a7674546830a5ac90a309e20894fd44": {
      "address": "0x70094EEF73c206E732EA0837E648B0A4F28bd433",
      "txHash": "0x6110592774eabb05e827f9861d9d0416b9c428c3b0b9e7919f0a58c60db1ddbb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC20SOULV2",
            "label": "isStakeableContract",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:39"
          },
          {
            "contract": "ERC20SOULV2",
            "label": "locks",
            "type": "t_mapping(t_address,t_struct(Lock)6912_storage)",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:40"
          },
          {
            "contract": "ERC20SOULV2",
            "label": "minLockTime",
            "type": "t_uint256",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:41"
          },
          {
            "contract": "ERC20SOULV2",
            "label": "maxLockTime",
            "type": "t_uint256",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:42"
          },
          {
            "contract": "ERC20SOULV2",
            "label": "maxSchedules",
            "type": "t_uint256",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:43"
          },
          {
            "contract": "ERC20SOULV2",
            "label": "totalLocked",
            "type": "t_uint256",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:44"
          },
          {
            "contract": "ERC20SOULV2",
            "label": "_upgradeV2",
            "type": "t_bool",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:45"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Lock)6912_storage)": {
            "label": "mapping(address => struct ERC20SOULV2.Lock)"
          },
          "t_struct(Lock)6912_storage": {
            "label": "struct ERC20SOULV2.Lock",
            "members": [
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "amountStaked",
                "type": "t_uint256"
              },
              {
                "label": "schedules",
                "type": "t_array(t_struct(Schedule)6917_storage)dyn_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Schedule)6917_storage)dyn_storage": {
            "label": "struct ERC20SOULV2.Schedule[]"
          },
          "t_struct(Schedule)6917_storage": {
            "label": "struct ERC20SOULV2.Schedule",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "expirationBlock",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a64babfd96cefc56c42c1da1a25db029228aeed1d5d2dfda69e169b037aa6d88": {
      "address": "0x8B167272997dA7a1550c3ec7847d6b43a909A03d",
      "txHash": "0x9dcb4cc20992fb8cb7aea17e601148ebd59651735a9e4f36d7ba090f6a734fd4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "UnderwriteManager",
            "label": "collateralToken",
            "type": "t_contract(IERC20)1926",
            "src": "contracts/CIP36/UnderwriteManager.sol:23"
          },
          {
            "contract": "UnderwriteManager",
            "label": "creditLines",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(CreditLine)5150_storage))",
            "src": "contracts/CIP36/UnderwriteManager.sol:26"
          },
          {
            "contract": "UnderwriteManager",
            "label": "networks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/CIP36/UnderwriteManager.sol:27"
          },
          {
            "contract": "UnderwriteManager",
            "label": "underwriters",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/CIP36/UnderwriteManager.sol:28"
          },
          {
            "contract": "UnderwriteManager",
            "label": "isActive",
            "type": "t_bool",
            "src": "contracts/CIP36/UnderwriteManager.sol:29"
          },
          {
            "contract": "UnderwriteManager",
            "label": "totalCollateral",
            "type": "t_uint256",
            "src": "contracts/CIP36/UnderwriteManager.sol:30"
          }
        ],
        "types": {
          "t_contract(IERC20)1926": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(CreditLine)5150_storage))": {
            "label": "mapping(address => mapping(address => struct UnderwriteManager.CreditLine))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(CreditLine)5150_storage)": {
            "label": "mapping(address => struct UnderwriteManager.CreditLine)"
          },
          "t_struct(CreditLine)5150_storage": {
            "label": "struct UnderwriteManager.CreditLine",
            "members": [
              {
                "label": "collateral",
                "type": "t_uint256"
              },
              {
                "label": "networkToken",
                "type": "t_address"
              },
              {
                "label": "issueDate",
                "type": "t_uint256"
              },
              {
                "label": "reward",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "faacb9ccb76c8feb790a391d3b123e159361b917daad4546006111f3b544f6de": {
      "address": "0x78160D37216E3B42448090c0FB594643fa564CDc",
      "txHash": "0x44cbc2233312b6b5d8e2305db50abcd6305668cb03a0e4168869fe4d2feb1cc3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "TokenClaimV2",
            "label": "_token",
            "type": "t_contract(IERC20SOUL)414",
            "src": "contracts/SOURCE/TokenClaimV2.sol:22"
          },
          {
            "contract": "TokenClaimV2",
            "label": "claims",
            "type": "t_mapping(t_address,t_struct(Claim)432_storage)",
            "src": "contracts/SOURCE/TokenClaimV2.sol:23"
          },
          {
            "contract": "TokenClaimV2",
            "label": "totalClaimable",
            "type": "t_uint256",
            "src": "contracts/SOURCE/TokenClaimV2.sol:24"
          }
        ],
        "types": {
          "t_contract(IERC20SOUL)414": {
            "label": "contract IERC20SOUL"
          },
          "t_mapping(t_address,t_struct(Claim)432_storage)": {
            "label": "mapping(address => struct TokenClaimV2.Claim)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Claim)432_storage": {
            "label": "struct TokenClaimV2.Claim",
            "members": [
              {
                "label": "unlockedAmount",
                "type": "t_uint256"
              },
              {
                "label": "lock",
                "type": "t_struct(Lock)307_storage"
              },
              {
                "label": "released",
                "type": "t_bool"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Lock)307_storage": {
            "label": "struct IERC20SOUL.Lock",
            "members": [
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "amountStaked",
                "type": "t_uint256"
              },
              {
                "label": "schedules",
                "type": "t_array(t_struct(Schedule)312_storage)dyn_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(Schedule)312_storage)dyn_storage": {
            "label": "struct IERC20SOUL.Schedule[]"
          },
          "t_struct(Schedule)312_storage": {
            "label": "struct IERC20SOUL.Schedule",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "expirationBlock",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d11191215a6d8c80ce6ed1da1bc6ecee93ec0b13bf5913eb143dcb8bbe0522b0": {
      "address": "0x2CD658Fb6DD56724C3383EAC381095aDF783b6ab",
      "txHash": "0x521663b71839c7fdd59adf7f093f52e261c1b20663e66cd9e1c8ad9ef15064e2",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "isStakeableContract",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20SOUL",
            "src": "contracts/SOURCE/ERC20SOUL.sol:35"
          },
          {
            "label": "locks",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(Lock)8926_storage)",
            "contract": "ERC20SOUL",
            "src": "contracts/SOURCE/ERC20SOUL.sol:36"
          },
          {
            "label": "minLockTime",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC20SOUL",
            "src": "contracts/SOURCE/ERC20SOUL.sol:37"
          },
          {
            "label": "maxLockTime",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "ERC20SOUL",
            "src": "contracts/SOURCE/ERC20SOUL.sol:38"
          },
          {
            "label": "maxSchedules",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "ERC20SOUL",
            "src": "contracts/SOURCE/ERC20SOUL.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Schedule)8931_storage)dyn_storage": {
            "label": "struct ERC20SOUL.Schedule[]"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_struct(Lock)8926_storage)": {
            "label": "mapping(address => struct ERC20SOUL.Lock)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Lock)8926_storage": {
            "label": "struct ERC20SOUL.Lock",
            "members": [
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "amountStaked",
                "type": "t_uint256"
              },
              {
                "label": "schedules",
                "type": "t_array(t_struct(Schedule)8931_storage)dyn_storage"
              }
            ]
          },
          "t_struct(Schedule)8931_storage": {
            "label": "struct ERC20SOUL.Schedule",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "expirationBlock",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "d3506339a6b2fd5c0cda90ea4316f29658376cadcf60909cf53cbacb29062e4c": {
      "address": "0x7970BFaEb9b4DceeC8598887C26680FBAc8a5fc2",
      "txHash": "0xfd62483c4b3a8d877063ab341db09e14807c243844927f551440bf695f22a5dc",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "isStakeableContract",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20SOULV2",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:39"
          },
          {
            "label": "locks",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(Lock)9595_storage)",
            "contract": "ERC20SOULV2",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:40"
          },
          {
            "label": "minLockTime",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC20SOULV2",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:41"
          },
          {
            "label": "maxLockTime",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "ERC20SOULV2",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:42"
          },
          {
            "label": "maxSchedules",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "ERC20SOULV2",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:43"
          },
          {
            "label": "totalLocked",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20SOULV2",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:44"
          },
          {
            "label": "_upgradeV2",
            "offset": 0,
            "slot": "157",
            "type": "t_bool",
            "contract": "ERC20SOULV2",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Schedule)9600_storage)dyn_storage": {
            "label": "struct ERC20SOULV2.Schedule[]"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_struct(Lock)9595_storage)": {
            "label": "mapping(address => struct ERC20SOULV2.Lock)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Lock)9595_storage": {
            "label": "struct ERC20SOULV2.Lock",
            "members": [
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "amountStaked",
                "type": "t_uint256"
              },
              {
                "label": "schedules",
                "type": "t_array(t_struct(Schedule)9600_storage)dyn_storage"
              }
            ]
          },
          "t_struct(Schedule)9600_storage": {
            "label": "struct ERC20SOULV2.Schedule",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "expirationBlock",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "4599fa5799a3f1e461c074996e0927a4c3d1794e3cc119894c74e7952b398bf7": {
      "address": "0xA03E385565474fD870Dfe6073f480796596f68a5",
      "txHash": "0x5750477e39a1e42a9e8f6850b34b542349f73e82a433952d6c724d1755cef364",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "isStakeableContract",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20SOULV3",
            "src": "contracts/SOURCE/ERC20SOULV3.sol:28"
          },
          {
            "label": "locks",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(Lock)10452_storage)",
            "contract": "ERC20SOULV3",
            "src": "contracts/SOURCE/ERC20SOULV3.sol:29"
          },
          {
            "label": "minLockTime",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC20SOULV3",
            "src": "contracts/SOURCE/ERC20SOULV3.sol:30"
          },
          {
            "label": "maxLockTime",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "ERC20SOULV3",
            "src": "contracts/SOURCE/ERC20SOULV3.sol:31"
          },
          {
            "label": "maxSchedules",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "ERC20SOULV3",
            "src": "contracts/SOURCE/ERC20SOULV3.sol:32"
          },
          {
            "label": "totalLocked",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20SOULV3",
            "src": "contracts/SOURCE/ERC20SOULV3.sol:33"
          },
          {
            "label": "_upgradeV2",
            "offset": 0,
            "slot": "157",
            "type": "t_bool",
            "contract": "ERC20SOULV3",
            "src": "contracts/SOURCE/ERC20SOULV3.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Schedule)10457_storage)dyn_storage": {
            "label": "struct ERC20SOULV3.Schedule[]"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_struct(Lock)10452_storage)": {
            "label": "mapping(address => struct ERC20SOULV3.Lock)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Lock)10452_storage": {
            "label": "struct ERC20SOULV3.Lock",
            "members": [
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "amountStaked",
                "type": "t_uint256"
              },
              {
                "label": "schedules",
                "type": "t_array(t_struct(Schedule)10457_storage)dyn_storage"
              }
            ]
          },
          "t_struct(Schedule)10457_storage": {
            "label": "struct ERC20SOULV3.Schedule",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "expirationBlock",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "6e034214753b94d530cf4cc1d91b0a9e82c34095df05b275c4fe809b52999314": {
      "address": "0x250a5a2770622F8Ab8214373470f54359367B391",
      "txHash": "0x66830851cb6db4c253bd393ac8b7c385de4ab7bd6f5b6ed8aabb9e288e33def5",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_token",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IERC20SOUL)11387",
            "contract": "TokenClaim",
            "src": "contracts/SOURCE/TokenClaim.sol:23"
          },
          {
            "label": "claims",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(Claim)11498_storage)",
            "contract": "TokenClaim",
            "src": "contracts/SOURCE/TokenClaim.sol:24"
          },
          {
            "label": "totalClaimable",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "TokenClaim",
            "src": "contracts/SOURCE/TokenClaim.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Schedule)11285_storage)dyn_storage": {
            "label": "struct IERC20SOUL.Schedule[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20SOUL)11387": {
            "label": "contract IERC20SOUL"
          },
          "t_mapping(t_address,t_struct(Claim)11498_storage)": {
            "label": "mapping(address => struct TokenClaim.Claim)"
          },
          "t_struct(Claim)11498_storage": {
            "label": "struct TokenClaim.Claim",
            "members": [
              {
                "label": "unlockedAmount",
                "type": "t_uint256"
              },
              {
                "label": "lock",
                "type": "t_struct(Lock)11280_storage"
              },
              {
                "label": "released",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(Lock)11280_storage": {
            "label": "struct IERC20SOUL.Lock",
            "members": [
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "amountStaked",
                "type": "t_uint256"
              },
              {
                "label": "schedules",
                "type": "t_array(t_struct(Schedule)11285_storage)dyn_storage"
              }
            ]
          },
          "t_struct(Schedule)11285_storage": {
            "label": "struct IERC20SOUL.Schedule",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "expirationBlock",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "00982204cdb6bf5b86dbb0019fdacbe274d73eefd12e7c921567faf827e4e5ef": {
      "address": "0x7B7a558725e796E780f83649606db41d3D160cCD",
      "txHash": "0xc2e5160614d906769a541c610f4747d80b7af2cc3f9f38fcc29669da082cfed2",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_token",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IERC20SOUL)11387",
            "contract": "TokenClaimV2",
            "src": "contracts/SOURCE/TokenClaimV2.sol:22"
          },
          {
            "label": "claims",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(Claim)12033_storage)",
            "contract": "TokenClaimV2",
            "src": "contracts/SOURCE/TokenClaimV2.sol:23"
          },
          {
            "label": "totalClaimable",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "TokenClaimV2",
            "src": "contracts/SOURCE/TokenClaimV2.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Schedule)11285_storage)dyn_storage": {
            "label": "struct IERC20SOUL.Schedule[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20SOUL)11387": {
            "label": "contract IERC20SOUL"
          },
          "t_mapping(t_address,t_struct(Claim)12033_storage)": {
            "label": "mapping(address => struct TokenClaimV2.Claim)"
          },
          "t_struct(Claim)12033_storage": {
            "label": "struct TokenClaimV2.Claim",
            "members": [
              {
                "label": "unlockedAmount",
                "type": "t_uint256"
              },
              {
                "label": "lock",
                "type": "t_struct(Lock)11280_storage"
              },
              {
                "label": "released",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(Lock)11280_storage": {
            "label": "struct IERC20SOUL.Lock",
            "members": [
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "amountStaked",
                "type": "t_uint256"
              },
              {
                "label": "schedules",
                "type": "t_array(t_struct(Schedule)11285_storage)dyn_storage"
              }
            ]
          },
          "t_struct(Schedule)11285_storage": {
            "label": "struct IERC20SOUL.Schedule",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "expirationBlock",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "e92e0a9baf4735f1af67e1321c5ae0822fc8518977235a2e89a5945339731005": {
      "address": "0x2d3ba5c73730C4afe84B240c9EDcd82B895674C1",
      "txHash": "0xd0b427549858a016c1bdacfb48b83d7365e506f559012dc3cd269a885d59256b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "fd9b20cbd61350d968e81d9dbcd7f77114f6c754b4a80473f173c4993d8f039e": {
      "address": "0x6CDB16c5e6ACdd29B5BCb829d937785501c5f8f7",
      "txHash": "0x24d94f74cb6c34ba8215d6d72a6c4fb1c478aceeb5de47ef60cc6a1451e6a986",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "collateralToken",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IERC20)3216",
            "contract": "CreditManager",
            "src": "contracts/Credit/CreditManager.sol:22"
          },
          {
            "label": "creditRoles",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(ICreditRoles)7958",
            "contract": "CreditManager",
            "src": "contracts/Credit/CreditManager.sol:23"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IPriceOracle)7966",
            "contract": "CreditManager",
            "src": "contracts/Credit/CreditManager.sol:24"
          },
          {
            "label": "totalStakedCollateral",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "CreditManager",
            "src": "contracts/Credit/CreditManager.sol:25"
          },
          {
            "label": "minLTV",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "CreditManager",
            "src": "contracts/Credit/CreditManager.sol:26"
          },
          {
            "label": "creditLineExpiration",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "CreditManager",
            "src": "contracts/Credit/CreditManager.sol:27"
          },
          {
            "label": "creditLines",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(CreditLine)7592_storage))",
            "contract": "CreditManager",
            "src": "contracts/Credit/CreditManager.sol:29"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CreditManager",
            "src": "contracts/Credit/CreditManager.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICreditRoles)7958": {
            "label": "contract ICreditRoles"
          },
          "t_contract(IERC20)3216": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceOracle)7966": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(CreditLine)7592_storage))": {
            "label": "mapping(address => mapping(address => struct ICreditManager.CreditLine))"
          },
          "t_mapping(t_address,t_struct(CreditLine)7592_storage)": {
            "label": "mapping(address => struct ICreditManager.CreditLine)"
          },
          "t_struct(CreditLine)7592_storage": {
            "label": "struct ICreditManager.CreditLine",
            "members": [
              {
                "label": "creditPool",
                "type": "t_address"
              },
              {
                "label": "issueDate",
                "type": "t_uint256"
              },
              {
                "label": "creditLimit",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "19038133a18339044d6f0777c6a90622039c93449592fdd5e5823bd3f7d6b9f2": {
      "address": "0x3F80B4234E87757f805c172B28C3A67245639FE2",
      "txHash": "0x14952bb9adff679e5bbd322c29d9bb43380809684b6d8fe41f5eab7811bdab10",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "creditRoles",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(ICreditRoles)7958",
            "contract": "CreditRequest",
            "src": "contracts/Credit/CreditRequest.sol:19"
          },
          {
            "label": "creditManager",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(ICreditManager)7753",
            "contract": "CreditRequest",
            "src": "contracts/Credit/CreditRequest.sol:20"
          },
          {
            "label": "requests",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(CreditRequest)7811_storage))",
            "contract": "CreditRequest",
            "src": "contracts/Credit/CreditRequest.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICreditManager)7753": {
            "label": "contract ICreditManager"
          },
          "t_contract(ICreditRoles)7958": {
            "label": "contract ICreditRoles"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(CreditRequest)7811_storage))": {
            "label": "mapping(address => mapping(address => struct ICreditRequest.CreditRequest))"
          },
          "t_mapping(t_address,t_struct(CreditRequest)7811_storage)": {
            "label": "mapping(address => struct ICreditRequest.CreditRequest)"
          },
          "t_struct(CreditRequest)7811_storage": {
            "label": "struct ICreditRequest.CreditRequest",
            "members": [
              {
                "label": "approved",
                "type": "t_bool"
              },
              {
                "label": "unstaking",
                "type": "t_bool"
              },
              {
                "label": "creditLimit",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "02206728662a27dbd6d51e339738fe9a1618aac4663f7a380df81f6ea9f95e15": {
      "address": "0x06B777A521F30EcFA5F1F65C68A2bE4A3bB17aD9",
      "txHash": "0x90ac0031e01d5bbd456936fb1401934ca98a5c2cd751e9a78856a99600d7a3c4",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "collateralToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1460",
            "contract": "CreditFeeManager",
            "src": "contracts/Credit/CreditFeeManager.sol:21"
          },
          {
            "label": "creditManager",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(ICreditManager)7753",
            "contract": "CreditFeeManager",
            "src": "contracts/Credit/CreditFeeManager.sol:22"
          },
          {
            "label": "creditRoles",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(ICreditRoles)7958",
            "contract": "CreditFeeManager",
            "src": "contracts/Credit/CreditFeeManager.sol:23"
          },
          {
            "label": "creditRequest",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(ICreditRequest)7889",
            "contract": "CreditFeeManager",
            "src": "contracts/Credit/CreditFeeManager.sol:24"
          },
          {
            "label": "underwriterFeePercent",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "CreditFeeManager",
            "src": "contracts/Credit/CreditFeeManager.sol:25"
          },
          {
            "label": "accruedFees",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "CreditFeeManager",
            "src": "contracts/Credit/CreditFeeManager.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICreditManager)7753": {
            "label": "contract ICreditManager"
          },
          "t_contract(ICreditRequest)7889": {
            "label": "contract ICreditRequest"
          },
          "t_contract(ICreditRoles)7958": {
            "label": "contract ICreditRoles"
          },
          "t_contract(IERC20Upgradeable)1460": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "ea71560617706f8229dddbb6104e461052d5d2074aeb73a56099cf120906602e": {
      "address": "0xAF5a915d14724F14D5Ae187478f6150E596f7Ace",
      "txHash": "0x2214bad0b649164f0994b2e35c52e38a4dc0be93fcf906d7d51d08bb99c7c2b8",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "stakingToken",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IERC20Upgradeable)1460",
            "contract": "CreditPool",
            "src": "contracts/Credit/CreditPool.sol:33"
          },
          {
            "label": "creditRoles",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(ICreditRoles)7958",
            "contract": "CreditPool",
            "src": "contracts/Credit/CreditPool.sol:34"
          },
          {
            "label": "rewardData",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_struct(Reward)5383_storage)",
            "contract": "CreditPool",
            "src": "contracts/Credit/CreditPool.sol:35"
          },
          {
            "label": "rewardTokens",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CreditPool",
            "src": "contracts/Credit/CreditPool.sol:36"
          },
          {
            "label": "underwriter",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "CreditPool",
            "src": "contracts/Credit/CreditPool.sol:37"
          },
          {
            "label": "totalCredit",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "CreditPool",
            "src": "contracts/Credit/CreditPool.sol:38"
          },
          {
            "label": "userRewardPerTokenPaid",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "CreditPool",
            "src": "contracts/Credit/CreditPool.sol:41"
          },
          {
            "label": "rewards",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "CreditPool",
            "src": "contracts/Credit/CreditPool.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "CreditPool",
            "src": "contracts/Credit/CreditPool.sol:44"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CreditPool",
            "src": "contracts/Credit/CreditPool.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICreditRoles)7958": {
            "label": "contract ICreditRoles"
          },
          "t_contract(IERC20Upgradeable)1460": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_struct(Reward)5383_storage)": {
            "label": "mapping(address => struct CreditPool.Reward)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(Reward)5383_storage": {
            "label": "struct CreditPool.Reward",
            "members": [
              {
                "label": "rewardsDistributor",
                "type": "t_address"
              },
              {
                "label": "rewardsDuration",
                "type": "t_uint256"
              },
              {
                "label": "periodFinish",
                "type": "t_uint256"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdateTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardPerTokenStored",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "d74fe155a1f6271f566c23f308b8a2e1966be3b30fe881bc770da20c5bd6fb4b": {
      "address": "0xf0C3d600995423F27054126c00A679541AAc0253",
      "txHash": "0x5d756e44a1663ad38e6f21972eff5d8ca95294633b9ca1b1079d9c589f25eccd",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "863436f7bddb4a4248a96d3caa0b2b9d7c69d15489b450bb42cff2a24650d663": {
      "address": "0x313098a76DcA5Ec15f5Df5FfF12A46c304E911c4",
      "txHash": "0x1ba12f2f9d361bb935679a5bd2fd7f959e09ffff895eeeffdb8b70aaadeec67d",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "walletDeployer",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IiKeyWalletDeployer)13355",
            "contract": "NetworkRoles",
            "src": "contracts/Network/NetworkRoles.sol:13"
          },
          {
            "label": "network",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "NetworkRoles",
            "src": "contracts/Network/NetworkRoles.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(IiKeyWalletDeployer)13355": {
            "label": "contract IiKeyWalletDeployer"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "4581e7f3c125836e296b2395ffdebd1b87b8b8e91c2d3f665fe1931e6a650bc6": {
      "address": "0xE756B77a261Fc6bB3487BebAf9281E5Ad2ac9A31",
      "txHash": "0x735d11cfb6a4d5be35693330bb8d95825d9aebcec0ffe7ff9fade8c7f7b97394",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_members",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_struct(Member)7982_storage)",
            "contract": "CIP36",
            "src": "contracts/Network/CIP36.sol:16"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "202",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "networkRoles",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INetworkRoles)8870",
            "contract": "RUSD",
            "src": "contracts/Network/RUSD.sol:16"
          },
          {
            "label": "creditRoles",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(ICreditRoles)7958",
            "contract": "RUSD",
            "src": "contracts/Network/RUSD.sol:17"
          },
          {
            "label": "feeManager",
            "offset": 0,
            "slot": "254",
            "type": "t_contract(ICreditFeeManager)7583",
            "contract": "RUSD",
            "src": "contracts/Network/RUSD.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICreditFeeManager)7583": {
            "label": "contract ICreditFeeManager"
          },
          "t_contract(ICreditRoles)7958": {
            "label": "contract ICreditRoles"
          },
          "t_contract(INetworkRoles)8870": {
            "label": "contract INetworkRoles"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_struct(Member)7982_storage)": {
            "label": "mapping(address => struct CIP36.Member)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Member)7982_storage": {
            "label": "struct CIP36.Member",
            "members": [
              {
                "label": "creditBalance",
                "type": "t_uint128"
              },
              {
                "label": "creditLimit",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "16a05235d075984f831a7babcbda61964abf422659afdeff70673b9101940193": {
      "address": "0x90aF1b04f7125E671B5accF92D16845c02D1F83D",
      "txHash": "0x65374a781a085ac6778af2c308c7be6202d35b1a89cbc6b7ef58711f1ee4f0a0",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "isStakeableContract",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20SOUL",
            "src": "contracts/SOURCE/ERC20SOUL.sol:35"
          },
          {
            "label": "locks",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(Lock)9972_storage)",
            "contract": "ERC20SOUL",
            "src": "contracts/SOURCE/ERC20SOUL.sol:36"
          },
          {
            "label": "minLockTime",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC20SOUL",
            "src": "contracts/SOURCE/ERC20SOUL.sol:37"
          },
          {
            "label": "maxLockTime",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "ERC20SOUL",
            "src": "contracts/SOURCE/ERC20SOUL.sol:38"
          },
          {
            "label": "maxSchedules",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "ERC20SOUL",
            "src": "contracts/SOURCE/ERC20SOUL.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Schedule)9977_storage)dyn_storage": {
            "label": "struct ERC20SOUL.Schedule[]"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_struct(Lock)9972_storage)": {
            "label": "mapping(address => struct ERC20SOUL.Lock)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Lock)9972_storage": {
            "label": "struct ERC20SOUL.Lock",
            "members": [
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "amountStaked",
                "type": "t_uint256"
              },
              {
                "label": "schedules",
                "type": "t_array(t_struct(Schedule)9977_storage)dyn_storage"
              }
            ]
          },
          "t_struct(Schedule)9977_storage": {
            "label": "struct ERC20SOUL.Schedule",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "expirationBlock",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "56fa0a7c915d9cb1017c6ffb5e4a9a465d68a00aefb4445f58c773814f60c114": {
      "address": "0xDa1ad24655fe4F749b45CeFB36fbBea4e75FF121",
      "txHash": "0x9346fd11256303edac34be995255819f2118c5dc76f6b027f58f429d2f0eeb87",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "isStakeableContract",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20SOULV2",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:39"
          },
          {
            "label": "locks",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(Lock)10641_storage)",
            "contract": "ERC20SOULV2",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:40"
          },
          {
            "label": "minLockTime",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC20SOULV2",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:41"
          },
          {
            "label": "maxLockTime",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "ERC20SOULV2",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:42"
          },
          {
            "label": "maxSchedules",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "ERC20SOULV2",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:43"
          },
          {
            "label": "totalLocked",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20SOULV2",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:44"
          },
          {
            "label": "_upgradeV2",
            "offset": 0,
            "slot": "157",
            "type": "t_bool",
            "contract": "ERC20SOULV2",
            "src": "contracts/SOURCE/ERC20SOULV2.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Schedule)10646_storage)dyn_storage": {
            "label": "struct ERC20SOULV2.Schedule[]"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_struct(Lock)10641_storage)": {
            "label": "mapping(address => struct ERC20SOULV2.Lock)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Lock)10641_storage": {
            "label": "struct ERC20SOULV2.Lock",
            "members": [
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "amountStaked",
                "type": "t_uint256"
              },
              {
                "label": "schedules",
                "type": "t_array(t_struct(Schedule)10646_storage)dyn_storage"
              }
            ]
          },
          "t_struct(Schedule)10646_storage": {
            "label": "struct ERC20SOULV2.Schedule",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "expirationBlock",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "3eba32827a5e292005c1dd888d1cef155c3946cc1b21ee09d3c76c7a59f1d474": {
      "address": "0x015665384CD086E95196363C5C44d6bb9a13217a",
      "txHash": "0x342473371f09baea22fcc141b399fe6351797a5870df81989183080d5371d8a8",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "isStakeableContract",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20SOULV3",
            "src": "contracts/SOURCE/ERC20SOULV3.sol:28"
          },
          {
            "label": "locks",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(Lock)11515_storage)",
            "contract": "ERC20SOULV3",
            "src": "contracts/SOURCE/ERC20SOULV3.sol:29"
          },
          {
            "label": "minLockTime",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC20SOULV3",
            "src": "contracts/SOURCE/ERC20SOULV3.sol:30"
          },
          {
            "label": "maxLockTime",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "ERC20SOULV3",
            "src": "contracts/SOURCE/ERC20SOULV3.sol:31"
          },
          {
            "label": "maxSchedules",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "ERC20SOULV3",
            "src": "contracts/SOURCE/ERC20SOULV3.sol:32"
          },
          {
            "label": "totalLocked",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20SOULV3",
            "src": "contracts/SOURCE/ERC20SOULV3.sol:33"
          },
          {
            "label": "_upgradeV2",
            "offset": 0,
            "slot": "157",
            "type": "t_bool",
            "contract": "ERC20SOULV3",
            "src": "contracts/SOURCE/ERC20SOULV3.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Schedule)11520_storage)dyn_storage": {
            "label": "struct ERC20SOULV3.Schedule[]"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_struct(Lock)11515_storage)": {
            "label": "mapping(address => struct ERC20SOULV3.Lock)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Lock)11515_storage": {
            "label": "struct ERC20SOULV3.Lock",
            "members": [
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "amountStaked",
                "type": "t_uint256"
              },
              {
                "label": "schedules",
                "type": "t_array(t_struct(Schedule)11520_storage)dyn_storage"
              }
            ]
          },
          "t_struct(Schedule)11520_storage": {
            "label": "struct ERC20SOULV3.Schedule",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "expirationBlock",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "d5bddb7592e1ea90a58493993afae14d85b3d18a0a1f253dd7e819c0e459d5d5": {
      "address": "0x344390bE444E433b879FE514A76B1A0E3f3A3d5c",
      "txHash": "0xca55fa873634c9143f66fb1014fabac45c6c1197667a16d0d42c0981045ed156",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_token",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IERC20SOUL)12433",
            "contract": "TokenClaim",
            "src": "contracts/SOURCE/TokenClaim.sol:23"
          },
          {
            "label": "claims",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(Claim)12544_storage)",
            "contract": "TokenClaim",
            "src": "contracts/SOURCE/TokenClaim.sol:24"
          },
          {
            "label": "totalClaimable",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "TokenClaim",
            "src": "contracts/SOURCE/TokenClaim.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Schedule)12331_storage)dyn_storage": {
            "label": "struct IERC20SOUL.Schedule[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20SOUL)12433": {
            "label": "contract IERC20SOUL"
          },
          "t_mapping(t_address,t_struct(Claim)12544_storage)": {
            "label": "mapping(address => struct TokenClaim.Claim)"
          },
          "t_struct(Claim)12544_storage": {
            "label": "struct TokenClaim.Claim",
            "members": [
              {
                "label": "unlockedAmount",
                "type": "t_uint256"
              },
              {
                "label": "lock",
                "type": "t_struct(Lock)12326_storage"
              },
              {
                "label": "released",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(Lock)12326_storage": {
            "label": "struct IERC20SOUL.Lock",
            "members": [
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "amountStaked",
                "type": "t_uint256"
              },
              {
                "label": "schedules",
                "type": "t_array(t_struct(Schedule)12331_storage)dyn_storage"
              }
            ]
          },
          "t_struct(Schedule)12331_storage": {
            "label": "struct IERC20SOUL.Schedule",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "expirationBlock",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "1a9f42bafa5d9727d1c65d9599e4a66df132230fffda0ad151de107b3babb73d": {
      "address": "0x3BB5f5d99c4C498aa4093B45EA19BB924F7E1b62",
      "txHash": "0x30eaf7a25e52d0c4ef2c47f2f690394dfb374fdec39a35c833a99187bb3b4db0",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_token",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IERC20SOUL)12450",
            "contract": "TokenClaimV2",
            "src": "contracts/SOURCE/TokenClaimV2.sol:22"
          },
          {
            "label": "claims",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(Claim)13096_storage)",
            "contract": "TokenClaimV2",
            "src": "contracts/SOURCE/TokenClaimV2.sol:23"
          },
          {
            "label": "totalClaimable",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "TokenClaimV2",
            "src": "contracts/SOURCE/TokenClaimV2.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Schedule)12348_storage)dyn_storage": {
            "label": "struct IERC20SOUL.Schedule[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20SOUL)12450": {
            "label": "contract IERC20SOUL"
          },
          "t_mapping(t_address,t_struct(Claim)13096_storage)": {
            "label": "mapping(address => struct TokenClaimV2.Claim)"
          },
          "t_struct(Claim)13096_storage": {
            "label": "struct TokenClaimV2.Claim",
            "members": [
              {
                "label": "unlockedAmount",
                "type": "t_uint256"
              },
              {
                "label": "lock",
                "type": "t_struct(Lock)12343_storage"
              },
              {
                "label": "released",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(Lock)12343_storage": {
            "label": "struct IERC20SOUL.Lock",
            "members": [
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "amountStaked",
                "type": "t_uint256"
              },
              {
                "label": "schedules",
                "type": "t_array(t_struct(Schedule)12348_storage)dyn_storage"
              }
            ]
          },
          "t_struct(Schedule)12348_storage": {
            "label": "struct IERC20SOUL.Schedule",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "expirationBlock",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "bcacef4e7e98b948d9807be9f5e93e8a90a3c095f4b44d269f14dd7b5c1b519e": {
      "address": "0x7e1177A3802ac529C6EFD8F1Dd87Daaad558070d",
      "txHash": "0x6be9b59d1c1a46e6adc71606de697c552f69e9130c4cb67540828a8356a5f48c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "3ad2bba42052c7d47f3d83b2432523cb52e282eb565ec12b6b965c266ae75bf3": {
      "address": "0x769c776C30597962af63d4bd79BE53c7deaEa4F8",
      "txHash": "0x86eba11b58fe178eb2ba8196d6b281c69e48802b6395d2bf8f2d3afe4326cdab",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "collateralToken",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IERC20)3474",
            "contract": "CreditManager",
            "src": "contracts/Credit/CreditManager.sol:22"
          },
          {
            "label": "creditRoles",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(ICreditRoles)8980",
            "contract": "CreditManager",
            "src": "contracts/Credit/CreditManager.sol:23"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IPriceOracle)8988",
            "contract": "CreditManager",
            "src": "contracts/Credit/CreditManager.sol:24"
          },
          {
            "label": "totalStakedCollateral",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "CreditManager",
            "src": "contracts/Credit/CreditManager.sol:25"
          },
          {
            "label": "minLTV",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "CreditManager",
            "src": "contracts/Credit/CreditManager.sol:26"
          },
          {
            "label": "creditLineExpiration",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "CreditManager",
            "src": "contracts/Credit/CreditManager.sol:27"
          },
          {
            "label": "creditLines",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(CreditLine)8614_storage))",
            "contract": "CreditManager",
            "src": "contracts/Credit/CreditManager.sol:29"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CreditManager",
            "src": "contracts/Credit/CreditManager.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICreditRoles)8980": {
            "label": "contract ICreditRoles"
          },
          "t_contract(IERC20)3474": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceOracle)8988": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(CreditLine)8614_storage))": {
            "label": "mapping(address => mapping(address => struct ICreditManager.CreditLine))"
          },
          "t_mapping(t_address,t_struct(CreditLine)8614_storage)": {
            "label": "mapping(address => struct ICreditManager.CreditLine)"
          },
          "t_struct(CreditLine)8614_storage": {
            "label": "struct ICreditManager.CreditLine",
            "members": [
              {
                "label": "creditPool",
                "type": "t_address"
              },
              {
                "label": "issueDate",
                "type": "t_uint256"
              },
              {
                "label": "creditLimit",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "c365821a294a8dfa9303c3cab86ecc4e2d384eda509ac94455d266af508a2164": {
      "address": "0xc79Cc99228b4e1526c8A48B36edf75dFbf4b79Aa",
      "txHash": "0x1602b6d8419ad311d9bbfd6a05530804ec8d96ebe46348c1bf7fcd9da0ffa145",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "creditRoles",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(ICreditRoles)8980",
            "contract": "CreditRequest",
            "src": "contracts/Credit/CreditRequest.sol:19"
          },
          {
            "label": "creditManager",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(ICreditManager)8775",
            "contract": "CreditRequest",
            "src": "contracts/Credit/CreditRequest.sol:20"
          },
          {
            "label": "requests",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(CreditRequest)8833_storage))",
            "contract": "CreditRequest",
            "src": "contracts/Credit/CreditRequest.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICreditManager)8775": {
            "label": "contract ICreditManager"
          },
          "t_contract(ICreditRoles)8980": {
            "label": "contract ICreditRoles"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(CreditRequest)8833_storage))": {
            "label": "mapping(address => mapping(address => struct ICreditRequest.CreditRequest))"
          },
          "t_mapping(t_address,t_struct(CreditRequest)8833_storage)": {
            "label": "mapping(address => struct ICreditRequest.CreditRequest)"
          },
          "t_struct(CreditRequest)8833_storage": {
            "label": "struct ICreditRequest.CreditRequest",
            "members": [
              {
                "label": "approved",
                "type": "t_bool"
              },
              {
                "label": "unstaking",
                "type": "t_bool"
              },
              {
                "label": "creditLimit",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "584a376721a1dff32a7b48d413971b2ebc5f767baf18191c96b671fe5c2ed58d": {
      "address": "0x15Df2Fad160e10A7F6A5f51Ed1E78D0fE1A88378",
      "txHash": "0xdda76ba6a67add4fd442c5d59915c4fce99d47dbb5f95851f32e143b50302e38",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "collateralToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1547",
            "contract": "CreditFeeManager",
            "src": "contracts/Credit/CreditFeeManager.sol:21"
          },
          {
            "label": "creditManager",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(ICreditManager)8775",
            "contract": "CreditFeeManager",
            "src": "contracts/Credit/CreditFeeManager.sol:22"
          },
          {
            "label": "creditRoles",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(ICreditRoles)8980",
            "contract": "CreditFeeManager",
            "src": "contracts/Credit/CreditFeeManager.sol:23"
          },
          {
            "label": "creditRequest",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(ICreditRequest)8911",
            "contract": "CreditFeeManager",
            "src": "contracts/Credit/CreditFeeManager.sol:24"
          },
          {
            "label": "underwriterFeePercent",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "CreditFeeManager",
            "src": "contracts/Credit/CreditFeeManager.sol:25"
          },
          {
            "label": "accruedFees",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "CreditFeeManager",
            "src": "contracts/Credit/CreditFeeManager.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICreditManager)8775": {
            "label": "contract ICreditManager"
          },
          "t_contract(ICreditRequest)8911": {
            "label": "contract ICreditRequest"
          },
          "t_contract(ICreditRoles)8980": {
            "label": "contract ICreditRoles"
          },
          "t_contract(IERC20Upgradeable)1547": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "4c36b9c8abf9d1ba54b495746d44d3b86a45f4bb7abb139d83182c595b18af5d": {
      "address": "0x4cBD9c92b8a39dE2187Ce469C0B6f3932A481a42",
      "txHash": "0x024137e1b1e1c548c35b9920b6ec63e50226862b194a863fc94d2a7914a0ad25",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "stakingToken",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IERC20Upgradeable)1547",
            "contract": "CreditPool",
            "src": "contracts/Credit/CreditPool.sol:33"
          },
          {
            "label": "creditRoles",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(ICreditRoles)8980",
            "contract": "CreditPool",
            "src": "contracts/Credit/CreditPool.sol:34"
          },
          {
            "label": "rewardData",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_struct(Reward)6405_storage)",
            "contract": "CreditPool",
            "src": "contracts/Credit/CreditPool.sol:35"
          },
          {
            "label": "rewardTokens",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CreditPool",
            "src": "contracts/Credit/CreditPool.sol:36"
          },
          {
            "label": "underwriter",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "CreditPool",
            "src": "contracts/Credit/CreditPool.sol:37"
          },
          {
            "label": "totalCredit",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "CreditPool",
            "src": "contracts/Credit/CreditPool.sol:38"
          },
          {
            "label": "userRewardPerTokenPaid",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "CreditPool",
            "src": "contracts/Credit/CreditPool.sol:41"
          },
          {
            "label": "rewards",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "CreditPool",
            "src": "contracts/Credit/CreditPool.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "CreditPool",
            "src": "contracts/Credit/CreditPool.sol:44"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CreditPool",
            "src": "contracts/Credit/CreditPool.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICreditRoles)8980": {
            "label": "contract ICreditRoles"
          },
          "t_contract(IERC20Upgradeable)1547": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_struct(Reward)6405_storage)": {
            "label": "mapping(address => struct CreditPool.Reward)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(Reward)6405_storage": {
            "label": "struct CreditPool.Reward",
            "members": [
              {
                "label": "rewardsDistributor",
                "type": "t_address"
              },
              {
                "label": "rewardsDuration",
                "type": "t_uint256"
              },
              {
                "label": "periodFinish",
                "type": "t_uint256"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdateTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardPerTokenStored",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "24bd6b4ae1e87e62ccc982f7a0866bc9d566be44fca44ce108770b24c2727fe8": {
      "address": "0x3E8b82e1B737B5DA245d6989D5B0DBD4A4870120",
      "txHash": "0x404fff97ff967e8f26999d38c95e1fe0f2d69496c00c31a7f6744f35bfd917e4",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "ec3e5abd964283911003233fd141474a130280dfb72a51997405de8f6d2f978e": {
      "address": "0x9fc117971ddd3a9BCC8dB351C478C5e721539b7a",
      "txHash": "0xb7fb314cab08e51a7f7a91900f7c180ce17f9114f9613a7aa533fbaacdefd185",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "walletDeployer",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IiKeyWalletDeployer)14418",
            "contract": "NetworkRoles",
            "src": "contracts/Network/NetworkRoles.sol:13"
          },
          {
            "label": "network",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "NetworkRoles",
            "src": "contracts/Network/NetworkRoles.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(IiKeyWalletDeployer)14418": {
            "label": "contract IiKeyWalletDeployer"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "6394fc26bc9ee5ba977ebcecf911c61373af5ac95988a056fc07820fb25de40d": {
      "address": "0x0BDe17592E62b496485a1Dbe4390124Ec79234fa",
      "txHash": "0xf8c41936c717e33a858bb15552640b262532c9f4bea467637af6e4297787721c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_members",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_struct(Member)2527_storage)",
            "contract": "CIP36",
            "src": "contracts/Network/CIP36.sol:16"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "202",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/Network/ERC2771ContextUpgradeable.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/Network/ERC2771ContextUpgradeable.sol:50"
          },
          {
            "label": "networkRoles",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(INetworkRoles)3236",
            "contract": "RUSD",
            "src": "contracts/Network/RUSD.sol:18"
          },
          {
            "label": "creditRoles",
            "offset": 0,
            "slot": "304",
            "type": "t_contract(ICreditRoles)2511",
            "contract": "RUSD",
            "src": "contracts/Network/RUSD.sol:19"
          },
          {
            "label": "feeManager",
            "offset": 0,
            "slot": "305",
            "type": "t_contract(ICreditFeeManager)2442",
            "contract": "RUSD",
            "src": "contracts/Network/RUSD.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICreditFeeManager)2442": {
            "label": "contract ICreditFeeManager"
          },
          "t_contract(ICreditRoles)2511": {
            "label": "contract ICreditRoles"
          },
          "t_contract(INetworkRoles)3236": {
            "label": "contract INetworkRoles"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_struct(Member)2527_storage)": {
            "label": "mapping(address => struct CIP36.Member)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Member)2527_storage": {
            "label": "struct CIP36.Member",
            "members": [
              {
                "label": "creditBalance",
                "type": "t_uint128"
              },
              {
                "label": "creditLimit",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "9f5cfcb520fb674c681a9056aca8c410d1df4983f4c9e8fb48a61341220e2ff4": {
      "address": "0x8B718eaB3c1e4e33D79ED330ac92bED1d6e18007",
      "txHash": "0x001e81d11c3056c1b57a30e303020628fddc1610dff8961f899ebf3924af7ec1",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "network",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "NetworkRoles",
            "src": "contracts/Network/NetworkRoles.sol:12"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    }
  }
}
