/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ReservePool, ReservePoolInterface } from "../ReservePool";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Recovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "collateralToken",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "networkRoles",
    outputs: [
      {
        internalType: "contract INetworkRoles",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stableCredit",
    outputs: [
      {
        internalType: "contract IStableCredit",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611861806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610121578063a694fc3a1461013f578063b2016bd41461015b578063dceed2ec14610179578063f2fde38b146101975761009e565b8063047ba40d146100a35780632e1a7d4d146100c15780634ac8eb5f146100dd578063715018a6146100fb5780638980f11f14610105575b600080fd5b6100ab6101b3565b6040516100b89190610ea4565b60405180910390f35b6100db60048036038101906100d69190610efa565b6101d9565b005b6100e5610413565b6040516100f29190610f36565b60405180910390f35b61010361041d565b005b61011f600480360381019061011a9190610f8f565b6104a5565b005b610129610621565b6040516101369190610fde565b60405180910390f35b61015960048036038101906101549190610efa565b61064b565b005b610163610887565b604051610170919061101a565b60405180910390f35b6101816108ad565b60405161018e9190611056565b60405180910390f35b6101b160048036038101906101ac9190611071565b6108d3565b005b609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002606554141561021f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610216906110fb565b60405180910390fd5b6002606581905550609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b81526004016102829190610fde565b60206040518083038186803b15801561029a57600080fd5b505afa1580156102ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d29190611153565b610311576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610308906111f2565b60405180910390fd5b60008111610354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034b9061125e565b60405180910390fd5b80609a600082825461036691906112ad565b925050819055506103ba3382609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166109cb9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516104009190610f36565b60405180910390a2600160658190555050565b6000609a54905090565b610425610a51565b73ffffffffffffffffffffffffffffffffffffffff16610443610621565b73ffffffffffffffffffffffffffffffffffffffff1614610499576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104909061132d565b60405180910390fd5b6104a36000610a59565b565b6104ad610a51565b73ffffffffffffffffffffffffffffffffffffffff166104cb610621565b73ffffffffffffffffffffffffffffffffffffffff1614610521576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105189061132d565b60405180910390fd5b609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156105b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a9906113bf565b60405180910390fd5b6105e46105bd610621565b828473ffffffffffffffffffffffffffffffffffffffff166109cb9092919063ffffffff16565b7f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa2882826040516106159291906113df565b60405180910390a15050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026065541415610691576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610688906110fb565b60405180910390fd5b6002606581905550609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80336040518263ffffffff1660e01b81526004016106f49190610fde565b60206040518083038186803b15801561070c57600080fd5b505afa158015610720573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107449190611153565b610783576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077a906111f2565b60405180910390fd5b600081116107c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bd90611454565b60405180910390fd5b80609a60008282546107d89190611474565b9250508190555061082e333083609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610b1f909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d826040516108749190610f36565b60405180910390a2600160658190555050565b609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b609860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6108db610a51565b73ffffffffffffffffffffffffffffffffffffffff166108f9610621565b73ffffffffffffffffffffffffffffffffffffffff161461094f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109469061132d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b69061153c565b60405180910390fd5b6109c881610a59565b50565b610a4c8363a9059cbb60e01b84846040516024016109ea9291906113df565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610ba8565b505050565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610ba2846323b872dd60e01b858585604051602401610b409392919061155c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610ba8565b50505050565b6000610c0a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610c6f9092919063ffffffff16565b9050600081511115610c6a5780806020019051810190610c2a9190611153565b610c69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6090611605565b60405180910390fd5b5b505050565b6060610c7e8484600085610c87565b90509392505050565b606082471015610ccc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc390611697565b60405180910390fd5b610cd585610d9b565b610d14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0b90611703565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610d3d919061179d565b60006040518083038185875af1925050503d8060008114610d7a576040519150601f19603f3d011682016040523d82523d6000602084013e610d7f565b606091505b5091509150610d8f828286610dbe565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315610dce57829050610e1e565b600083511115610de15782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e159190611809565b60405180910390fd5b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610e6a610e65610e6084610e25565b610e45565b610e25565b9050919050565b6000610e7c82610e4f565b9050919050565b6000610e8e82610e71565b9050919050565b610e9e81610e83565b82525050565b6000602082019050610eb96000830184610e95565b92915050565b600080fd5b6000819050919050565b610ed781610ec4565b8114610ee257600080fd5b50565b600081359050610ef481610ece565b92915050565b600060208284031215610f1057610f0f610ebf565b5b6000610f1e84828501610ee5565b91505092915050565b610f3081610ec4565b82525050565b6000602082019050610f4b6000830184610f27565b92915050565b6000610f5c82610e25565b9050919050565b610f6c81610f51565b8114610f7757600080fd5b50565b600081359050610f8981610f63565b92915050565b60008060408385031215610fa657610fa5610ebf565b5b6000610fb485828601610f7a565b9250506020610fc585828601610ee5565b9150509250929050565b610fd881610f51565b82525050565b6000602082019050610ff36000830184610fcf565b92915050565b600061100482610e71565b9050919050565b61101481610ff9565b82525050565b600060208201905061102f600083018461100b565b92915050565b600061104082610e71565b9050919050565b61105081611035565b82525050565b600060208201905061106b6000830184611047565b92915050565b60006020828403121561108757611086610ebf565b5b600061109584828501610f7a565b91505092915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006110e5601f8361109e565b91506110f0826110af565b602082019050919050565b60006020820190508181036000830152611114816110d8565b9050919050565b60008115159050919050565b6111308161111b565b811461113b57600080fd5b50565b60008151905061114d81611127565b92915050565b60006020828403121561116957611168610ebf565b5b60006111778482850161113e565b91505092915050565b7f52657365727665506f6f6c3a2063616c6c6572206e6f7420617574686f72697a60008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b60006111dc60228361109e565b91506111e782611180565b604082019050919050565b6000602082019050818103600083015261120b816111cf565b9050919050565b7f52657365727665506f6f6c3a2043616e6e6f7420776974686472617720300000600082015250565b6000611248601e8361109e565b915061125382611212565b602082019050919050565b600060208201905081810360008301526112778161123b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112b882610ec4565b91506112c383610ec4565b9250828210156112d6576112d561127e565b5b828203905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061131760208361109e565b9150611322826112e1565b602082019050919050565b600060208201905081810360008301526113468161130a565b9050919050565b7f52657365727665506f6f6c3a2043616e6e6f742077697468647261772073746160008201527f6b696e6720746f6b656e00000000000000000000000000000000000000000000602082015250565b60006113a9602a8361109e565b91506113b48261134d565b604082019050919050565b600060208201905081810360008301526113d88161139c565b9050919050565b60006040820190506113f46000830185610fcf565b6114016020830184610f27565b9392505050565b7f52657365727665506f6f6c3a2043616e6e6f74207374616b6520300000000000600082015250565b600061143e601b8361109e565b915061144982611408565b602082019050919050565b6000602082019050818103600083015261146d81611431565b9050919050565b600061147f82610ec4565b915061148a83610ec4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114bf576114be61127e565b5b828201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061152660268361109e565b9150611531826114ca565b604082019050919050565b6000602082019050818103600083015261155581611519565b9050919050565b60006060820190506115716000830186610fcf565b61157e6020830185610fcf565b61158b6040830184610f27565b949350505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006115ef602a8361109e565b91506115fa82611593565b604082019050919050565b6000602082019050818103600083015261161e816115e2565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061168160268361109e565b915061168c82611625565b604082019050919050565b600060208201905081810360008301526116b081611674565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006116ed601d8361109e565b91506116f8826116b7565b602082019050919050565b6000602082019050818103600083015261171c816116e0565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561175757808201518184015260208101905061173c565b83811115611766576000848401525b50505050565b600061177782611723565b611781818561172e565b9350611791818560208601611739565b80840191505092915050565b60006117a9828461176c565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b60006117db826117b4565b6117e5818561109e565b93506117f5818560208601611739565b6117fe816117bf565b840191505092915050565b6000602082019050818103600083015261182381846117d0565b90509291505056fea2646970667358221220ca94a96a2231d67a7866a5cdd3c05fa1c23e6ea35a98777e10fb66405320818764736f6c63430008090033";

export class ReservePool__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ReservePool> {
    return super.deploy(overrides || {}) as Promise<ReservePool>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ReservePool {
    return super.attach(address) as ReservePool;
  }
  connect(signer: Signer): ReservePool__factory {
    return super.connect(signer) as ReservePool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReservePoolInterface {
    return new utils.Interface(_abi) as ReservePoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReservePool {
    return new Contract(address, _abi, signerOrProvider) as ReservePool;
  }
}
