/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PriceOracle, PriceOracleInterface } from "../PriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_oracleManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getPriceInPPT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracleManager",
        type: "address",
      },
    ],
    name: "setOracleManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e9338038062000e9383398181016040528101906200003791906200031f565b620000576200004b620001ab60201b60201c565b620001b360201b60201c565b6200008b7f8af58bdcd418b02809a8c2504b0b221f3ce353edcaada2a476b84e2d74188ef560001b6200027760201b60201c565b620000bf7f6baea3e0753eaa8bea1036d5f9244b2db4ad80366700d59180716f708820425260001b6200027760201b60201c565b620000f37fb3b29663c4464d89b8bb62b1e6d97e6543e551a35724dce3d7c423c584d4339060001b6200027760201b60201c565b816001819055506200012e7f3fad4c1b373b9871be60dcb4d0e27319f18563b198683e2078338b18f1c523ad60001b6200027760201b60201c565b620001627f29721c7da693d370c590ba2329dcc0e2a9482c4b33dc32edd0a77610ab6b8a6c60001b6200027760201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000366565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b600080fd5b6000819050919050565b62000294816200027f565b8114620002a057600080fd5b50565b600081519050620002b48162000289565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002e782620002ba565b9050919050565b620002f981620002da565b81146200030557600080fd5b50565b6000815190506200031981620002ee565b92915050565b600080604083850312156200033957620003386200027a565b5b60006200034985828601620002a3565b92505060206200035c8582860162000308565b9150509250929050565b610b1d80620003766000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806391b7f5ed1161005b57806391b7f5ed146100f1578063929e2e081461010d578063a035b1fe14610129578063f2fde38b1461014757610088565b8063338f1ce61461008d578063565d878c146100ab578063715018a6146100c95780638da5cb5b146100d3575b600080fd5b610095610163565b6040516100a29190610818565b60405180910390f35b6100b36101f1565b6040516100c09190610874565b60405180910390f35b6100d1610217565b005b6100db61029f565b6040516100e89190610874565b60405180910390f35b61010b600480360381019061010691906108c0565b6102c8565b005b61012760048036038101906101229190610919565b6104ee565b005b610131610632565b60405161013e9190610818565b60405180910390f35b610161600480360381019061015c9190610919565b610638565b005b60006101917f42de7f85e8d53cdf9a50c789d9932c03fbbc9b6f58c92946d069475304b323b560001b610730565b6101bd7f55b32255cb158dde6fd5785486dd49c608aaff72b92e46516e5468d709a7eec560001b610730565b6101e97fb68eff36a15f067958eb466267b27dc4a7d3fb9532d6cea11bdaa5f2952fc2a760001b610730565b600154905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61021f610733565b73ffffffffffffffffffffffffffffffffffffffff1661023d61029f565b73ffffffffffffffffffffffffffffffffffffffff1614610293576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028a906109a3565b60405180910390fd5b61029d600061073b565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102f47fc3b2180ec0707c03c4d3b940d35931399c47b2cc36b56df30290e456d301517f60001b610730565b6103207f3cabcc087b4a37220c8f8c5c98993e216b5c2014ba1cfa28d4cbe6d7f011b87660001b610730565b61034c7f08908b466c2630c5b8bd7dfa24203176e4bb9d9eaa3e1b7d383ffeafb71b224c60001b610730565b6103787fec0ec9f52872092d6f819680cd844289fb3b2244af329a1bda1e013642ff5a4a60001b610730565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff90610a35565b60405180910390fd5b6104347f90eae1ac4ada96de7c8e8aa62ed57ea01a08e5bfa2ff6ea25f2cc26c9879a0c860001b610730565b6104607fdba8b6cc02d91e5fc96d7ef62f9f83c17cda7bf36e9db8d28d2c52d47352a2eb60001b610730565b61048c7f57409e4c5e4e8766ad58eb894cfd9d3a35bc6a4b29808e8cb98b57f3e6080c1960001b610730565b6104b87f7c6236f1cc784dc58b88e05c352019937834571ef73a7639968f85a25b53993360001b610730565b6104e47f29e722511e22339f322265b3fc50c04129418a405eb88df3a41e9421c4b8ae7160001b610730565b8060018190555050565b6104f6610733565b73ffffffffffffffffffffffffffffffffffffffff1661051461029f565b73ffffffffffffffffffffffffffffffffffffffff161461056a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610561906109a3565b60405180910390fd5b6105967f9f2942e4292011c4521a4c2215402329b507f4003824d850f821b16315cafbc960001b610730565b6105c27f1db860f88f20613461cb28db1590b16b6b5162c75376fb7b781c2c7b1ccb96e760001b610730565b6105ee7fc13802e78556da0e08ed23d761f777091f5d6745c95f984f7d8563cf72662af560001b610730565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60015481565b610640610733565b73ffffffffffffffffffffffffffffffffffffffff1661065e61029f565b73ffffffffffffffffffffffffffffffffffffffff16146106b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ab906109a3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071b90610ac7565b60405180910390fd5b61072d8161073b565b50565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000819050919050565b610812816107ff565b82525050565b600060208201905061082d6000830184610809565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061085e82610833565b9050919050565b61086e81610853565b82525050565b60006020820190506108896000830184610865565b92915050565b600080fd5b61089d816107ff565b81146108a857600080fd5b50565b6000813590506108ba81610894565b92915050565b6000602082840312156108d6576108d561088f565b5b60006108e4848285016108ab565b91505092915050565b6108f681610853565b811461090157600080fd5b50565b600081359050610913816108ed565b92915050565b60006020828403121561092f5761092e61088f565b5b600061093d84828501610904565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061098d602083610946565b915061099882610957565b602082019050919050565b600060208201905081810360008301526109bc81610980565b9050919050565b7f50726963654f7261636c653a2043616c6c6572206d757374206265206d616e6160008201527f6765722e00000000000000000000000000000000000000000000000000000000602082015250565b6000610a1f602483610946565b9150610a2a826109c3565b604082019050919050565b60006020820190508181036000830152610a4e81610a12565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610ab1602683610946565b9150610abc82610a55565b604082019050919050565b60006020820190508181036000830152610ae081610aa4565b905091905056fea264697066735822122076d46e5a0d5ebd6e8d4eb35b93c666270dfd12e4e87dd84db1833ba5eeae3fd164736f6c63430008090033";

export class PriceOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _price: BigNumberish,
    _oracleManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PriceOracle> {
    return super.deploy(
      _price,
      _oracleManager,
      overrides || {}
    ) as Promise<PriceOracle>;
  }
  getDeployTransaction(
    _price: BigNumberish,
    _oracleManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_price, _oracleManager, overrides || {});
  }
  attach(address: string): PriceOracle {
    return super.attach(address) as PriceOracle;
  }
  connect(signer: Signer): PriceOracle__factory {
    return super.connect(signer) as PriceOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceOracleInterface {
    return new utils.Interface(_abi) as PriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceOracle {
    return new Contract(address, _abi, signerOrProvider) as PriceOracle;
  }
}
