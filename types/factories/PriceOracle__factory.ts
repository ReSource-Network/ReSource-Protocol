/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PriceOracle, PriceOracleInterface } from "../PriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_oracleManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getPriceInPPT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracleManager",
        type: "address",
      },
    ],
    name: "setOracleManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ad7380380610ad783398181016040528101906100329190610202565b61004e61004361009d60201b60201c565b6100a560201b60201c565b8160018190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610242565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b6101818161016e565b811461018c57600080fd5b50565b60008151905061019e81610178565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101cf826101a4565b9050919050565b6101df816101c4565b81146101ea57600080fd5b50565b6000815190506101fc816101d6565b92915050565b6000806040838503121561021957610218610169565b5b60006102278582860161018f565b9250506020610238858286016101ed565b9150509250929050565b610886806102516000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806391b7f5ed1161005b57806391b7f5ed146100f1578063929e2e081461010d578063a035b1fe14610129578063f2fde38b1461014757610088565b8063338f1ce61461008d578063565d878c146100ab578063715018a6146100c95780638da5cb5b146100d3575b600080fd5b610095610163565b6040516100a29190610581565b60405180910390f35b6100b361016d565b6040516100c091906105dd565b60405180910390f35b6100d1610193565b005b6100db61021b565b6040516100e891906105dd565b60405180910390f35b61010b60048036038101906101069190610629565b610244565b005b61012760048036038101906101229190610682565b6102de565b005b61013161039e565b60405161013e9190610581565b60405180910390f35b610161600480360381019061015c9190610682565b6103a4565b005b6000600154905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61019b61049c565b73ffffffffffffffffffffffffffffffffffffffff166101b961021b565b73ffffffffffffffffffffffffffffffffffffffff161461020f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102069061070c565b60405180910390fd5b61021960006104a4565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cb9061079e565b60405180910390fd5b8060018190555050565b6102e661049c565b73ffffffffffffffffffffffffffffffffffffffff1661030461021b565b73ffffffffffffffffffffffffffffffffffffffff161461035a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103519061070c565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60015481565b6103ac61049c565b73ffffffffffffffffffffffffffffffffffffffff166103ca61021b565b73ffffffffffffffffffffffffffffffffffffffff1614610420576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104179061070c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610490576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048790610830565b60405180910390fd5b610499816104a4565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000819050919050565b61057b81610568565b82525050565b60006020820190506105966000830184610572565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105c78261059c565b9050919050565b6105d7816105bc565b82525050565b60006020820190506105f260008301846105ce565b92915050565b600080fd5b61060681610568565b811461061157600080fd5b50565b600081359050610623816105fd565b92915050565b60006020828403121561063f5761063e6105f8565b5b600061064d84828501610614565b91505092915050565b61065f816105bc565b811461066a57600080fd5b50565b60008135905061067c81610656565b92915050565b600060208284031215610698576106976105f8565b5b60006106a68482850161066d565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006106f66020836106af565b9150610701826106c0565b602082019050919050565b60006020820190508181036000830152610725816106e9565b9050919050565b7f50726963654f7261636c653a2043616c6c6572206d757374206265206d616e6160008201527f6765722e00000000000000000000000000000000000000000000000000000000602082015250565b60006107886024836106af565b91506107938261072c565b604082019050919050565b600060208201905081810360008301526107b78161077b565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061081a6026836106af565b9150610825826107be565b604082019050919050565b600060208201905081810360008301526108498161080d565b905091905056fea26469706673582212206336924138593c883582eeb833125ed198150ddbd90928a236f3f0893519036564736f6c63430008090033";

export class PriceOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _price: BigNumberish,
    _oracleManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PriceOracle> {
    return super.deploy(
      _price,
      _oracleManager,
      overrides || {}
    ) as Promise<PriceOracle>;
  }
  getDeployTransaction(
    _price: BigNumberish,
    _oracleManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_price, _oracleManager, overrides || {});
  }
  attach(address: string): PriceOracle {
    return super.attach(address) as PriceOracle;
  }
  connect(signer: Signer): PriceOracle__factory {
    return super.connect(signer) as PriceOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceOracleInterface {
    return new utils.Interface(_abi) as PriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceOracle {
    return new Contract(address, _abi, signerOrProvider) as PriceOracle;
  }
}
