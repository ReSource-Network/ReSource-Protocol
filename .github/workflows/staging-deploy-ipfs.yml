name: "Mu dApp - Deploy"

on:
  push:
    branches:
      - staging

jobs:
  bucket_push:
    runs-on: ubuntu-latest
    name: Deploy to IPFS & Crust
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Packages
        run: |
          export SKIP_POSTINSTALL=1 
          yarn install
          cd ./packages/hardhat
          yarn install 
          yarn hardhat run scripts/publish.ts
          cd ../react-app 
          yarn install

      - name: Build app
        run: |
          cd ./packages/react-app/
          export CI=false 
          yarn codegen
          yarn build

      - name: upload
        id: upload
        uses: ReSource-Network/ipfs-action@v1.8.1
        with:
          path: ./packages/react-app/build
          pinataPinName: mu-dapp
          service: pinata
          pinataKey: ${{ secrets.PINATA_KEY }}
          pinataSecret: ${{ secrets.PINATA_SECRET }}

      - name: Update DNSLink
        env:
          TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
          ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          CID: ${{ steps.upload.outputs.hash }}
          RECORD_DOMAIN: "resource.finance"
          RECORD_NAME: "_dnslink.app"
        run: |
          echo "ENV CID=$CID" >> ${GITHUB_WORKSPACE}/Dockerfile
          echo "ENV RECORD_DOMAIN=$RECORD_DOMAIN" >> ${GITHUB_WORKSPACE}/Dockerfile
          echo "ENV RECORD_NAME=$RECORD_NAME" >> ${GITHUB_WORKSPACE}/Dockerfile

          cat ${GITHUB_WORKSPACE}/Dockerfile
          docker build --build-arg CLOUDFLARE_TOKEN=$TOKEN --build-arg CLOUDFLARE_ZONE_ID=$ZONE_ID -t cloudflare-dns .
          docker run cloudflare-dns

API Key
6396306d58b1d7907457

API Secret
f50f66c0f15018087d8eb8581a81f168735edd04f9f1da31480cb19e2528b030

JWT
(Secret access token)
eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySW5mb3JtYXRpb24iOnsiaWQiOiI0NmU4ZWFhNC00NTZiLTQ2YjItOTk5ZC03YWViNGYxZDllMWIiLCJlbWFpbCI6InNheWVyQHJlc291cmNlbmV0d29yay5jbyIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJwaW5fcG9saWN5Ijp7InJlZ2lvbnMiOlt7ImlkIjoiTllDMSIsImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxfV0sInZlcnNpb24iOjF9LCJtZmFfZW5hYmxlZCI6ZmFsc2V9LCJhdXRoZW50aWNhdGlvblR5cGUiOiJzY29wZWRLZXkiLCJzY29wZWRLZXlLZXkiOiI2Mzk2MzA2ZDU4YjFkNzkwNzQ1NyIsInNjb3BlZEtleVNlY3JldCI6ImY1MGY2NmMwZjE1MDE4MDg3ZDhlYjg1ODFhODFmMTY4NzM1ZWRkMDRmOWYxZGEzMTQ4MGNiMTllMjUyOGIwMzAiLCJpYXQiOjE2MzI4OTA0OTh9.OQc9VCrgHCTfAEJu4S_U9lnfv3GtGJZC9WY_vmm-vfc