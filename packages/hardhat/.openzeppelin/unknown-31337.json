{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
    "txHash": "0xd2f7ffce0674880cdceea065f07c2db9f4edbf616b476f94926454ee6f4c4b7d",
    "deployTransaction": {
      "hash": "0xd2f7ffce0674880cdceea065f07c2db9f4edbf616b476f94926454ee6f4c4b7d",
      "type": 2,
      "accessList": [],
      "blockHash": "0x330c5ca81cc7889e87fc49761010143fd3b587160d042be080c2d38fed045c6f",
      "blockNumber": 16,
      "transactionIndex": 0,
      "confirmations": 1,
      "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x0161c3a271"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x01592b6313"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x01640c1345"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 15,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x14f0193dbeaa5d05d1ca5ca4880abdf4cb075fc018b3ef0a33de913223620852",
      "s": "0x2f97c29a2d0d9c47071f29f5f598772ee5dea672e12fe529c1331d018e283c97",
      "v": 1,
      "creates": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      "chainId": 31337
    }
  },
  "proxies": [
    {
      "address": "0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1",
      "txHash": "0x8cf969d71fe7aad65098e90e7fa8cbcc987962b5846b451695781acb5fb5f232",
      "kind": "transparent"
    },
    {
      "address": "0x68B1D87F95878fE05B998F19b66F4baba5De1aed",
      "txHash": "0x0db2200b82e45aba803d4cd4075023e8d09135cdbc7e6c20e861d1487fd64ba1",
      "kind": "transparent"
    },
    {
      "address": "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
      "txHash": "0x886d618222864205047e8be12262384143a821dfea32506e7e979f05b689047e",
      "kind": "transparent"
    },
    {
      "address": "0x4ed7c70F96B99c776995fB64377f0d4aB3B0e1C1",
      "txHash": "0xeed6f9c8e081bb771128294de9bbc49fa89e5f5c847e55a1f8f116876e7586ac",
      "kind": "transparent"
    },
    {
      "address": "0x322813Fd9A801c5507c9de605d63CEA4f2CE6c44",
      "txHash": "0xfa4d4250241fabd014ff5761202fe1af8bf792ac655c819bcbf6e7a971c092f7",
      "kind": "transparent"
    },
    {
      "address": "0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f",
      "txHash": "0xd2de464e9bcb08b82d4f7884e30bb44c419921362dc62968e8b61dd348e32ce6",
      "kind": "transparent"
    },
    {
      "address": "0x4A679253410272dd5232B3Ff7cF5dbB88f295319",
      "txHash": "0x3b715e02e0b3421b99796b597f39b757f46c641ad2f2fe2b69a7a335eb041b20",
      "kind": "transparent"
    },
    {
      "address": "0x7a2088a1bFc9d81c55368AE168C2C02570cB814F",
      "txHash": "0x40f3232f2e6f23200ad6b166918cf4ff3e3d616575d70c11466a15c06c2b828b",
      "kind": "transparent"
    }
  ],
  "impls": {
    "0329915a894f3dfbb8b4fe0d1541de312ffbae246dfe0c6ac6c0f50c79ab630c": {
      "address": "0x9A676e781A523b5d0C0e43731313A708CB607508",
      "txHash": "0xb3f2811846d06f33e136562370c249587b8fb54554d881dd62b96773b6596ef9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "NetworkRegistry",
            "label": "isMember",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/NetworkRegistry.sol:20"
          },
          {
            "contract": "NetworkRegistry",
            "label": "isOperator",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/NetworkRegistry.sol:21"
          },
          {
            "contract": "NetworkRegistry",
            "label": "operators",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/NetworkRegistry.sol:22"
          },
          {
            "contract": "NetworkRegistry",
            "label": "members",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/NetworkRegistry.sol:23"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e130d625c00c75a7b5d83a93665a3b812367db7a71cb03b276bb289f23e47938": {
      "address": "0x9A9f2CCfdE556A7E9Ff0848998Aa4a0CFD8863AE",
      "txHash": "0x92d82bc01480be6324bcde6ae7d4baa9d3f647a38f698571463914af7fe60f75",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6ab35aded1bdba51c76c7c77c23cf6f5ae8de6b5a1888fd774161979adf4638f": {
      "address": "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
      "txHash": "0x002eabb7a7cf29cf04c2815fe281c793eac0ae2c62c394682b2ded8cd9028f17",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "UnderwriteManager",
            "label": "collateralToken",
            "type": "t_contract(IERC20)1055",
            "src": "contracts/UnderwriteManager.sol:22"
          },
          {
            "contract": "UnderwriteManager",
            "label": "creditLines",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(CreditLine)3805_storage))",
            "src": "contracts/UnderwriteManager.sol:25"
          },
          {
            "contract": "UnderwriteManager",
            "label": "networks",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/UnderwriteManager.sol:26"
          },
          {
            "contract": "UnderwriteManager",
            "label": "underwriters",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/UnderwriteManager.sol:27"
          },
          {
            "contract": "UnderwriteManager",
            "label": "isActive",
            "type": "t_bool",
            "src": "contracts/UnderwriteManager.sol:28"
          }
        ],
        "types": {
          "t_contract(IERC20)1055": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(CreditLine)3805_storage))": {
            "label": "mapping(address => mapping(address => struct UnderwriteManager.CreditLine))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(CreditLine)3805_storage)": {
            "label": "mapping(address => struct UnderwriteManager.CreditLine)"
          },
          "t_struct(CreditLine)3805_storage": {
            "label": "struct UnderwriteManager.CreditLine",
            "members": [
              {
                "label": "collateral",
                "type": "t_uint256"
              },
              {
                "label": "networkToken",
                "type": "t_address"
              },
              {
                "label": "issueDate",
                "type": "t_uint256"
              },
              {
                "label": "reward",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "47c2b9e1a9450ac960e9a916c64e0ff6f50f998c0ea1126cf6dd9d290735f8f1": {
      "address": "0x59b670e9fA9D0A427751Af201D676719a970857b",
      "txHash": "0xad28748f044aa19761a00e69a13d0aad743142516ac608bc6cb27b5a50cbc25b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:50"
          },
          {
            "contract": "CIP36",
            "label": "_members",
            "type": "t_mapping(t_address,t_struct(Member)1184_storage)",
            "src": "contracts/CIP36.sol:28"
          },
          {
            "contract": "CIP36",
            "label": "underwriteManagerAddress",
            "type": "t_address",
            "src": "contracts/CIP36.sol:30"
          },
          {
            "contract": "RUSD",
            "label": "registry",
            "type": "t_contract(NetworkRegistry)3356",
            "src": "contracts/RUSD.sol:35"
          },
          {
            "contract": "RUSD",
            "label": "underwriteManager",
            "type": "t_contract(UnderwriteManager)4646",
            "src": "contracts/RUSD.sol:36"
          },
          {
            "contract": "RUSD",
            "label": "restrictionState",
            "type": "t_enum(Restriction)3368",
            "src": "contracts/RUSD.sol:38"
          },
          {
            "contract": "RUSD",
            "label": "restrictionRenewal",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:39"
          },
          {
            "contract": "RUSD",
            "label": "expirationSeconds",
            "type": "t_uint256",
            "src": "contracts/RUSD.sol:40"
          }
        ],
        "types": {
          "t_contract(NetworkRegistry)3356": {
            "label": "contract NetworkRegistry"
          },
          "t_contract(UnderwriteManager)4646": {
            "label": "contract UnderwriteManager"
          },
          "t_enum(Restriction)3368": {
            "label": "enum RUSD.Restriction",
            "members": [
              "REGISTERED",
              "POSITIVE",
              "NONE"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Member)1184_storage)": {
            "label": "mapping(address => struct CIP36.Member)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Member)1184_storage": {
            "label": "struct CIP36.Member",
            "members": [
              {
                "label": "creditBalance",
                "type": "t_uint128"
              },
              {
                "label": "creditLimit",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
