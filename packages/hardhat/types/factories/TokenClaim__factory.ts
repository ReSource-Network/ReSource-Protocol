/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenClaim, TokenClaimInterface } from "../TokenClaim";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Released",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_unlockedAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "totalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountStaked",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "expirationBlock",
                type: "uint256",
              },
            ],
            internalType: "struct IERC20SOUL.Schedule[]",
            name: "schedules",
            type: "tuple[]",
          },
        ],
        internalType: "struct IERC20SOUL.Lock",
        name: "_lock",
        type: "tuple",
      },
    ],
    name: "addClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claims",
    outputs: [
      {
        internalType: "uint256",
        name: "unlockedAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "totalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountStaked",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "expirationBlock",
                type: "uint256",
              },
            ],
            internalType: "struct IERC20SOUL.Schedule[]",
            name: "schedules",
            type: "tuple[]",
          },
        ],
        internalType: "struct IERC20SOUL.Lock",
        name: "lock",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "released",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "getClaimLockSchedule",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationBlock",
            type: "uint256",
          },
        ],
        internalType: "struct IERC20SOUL.Schedule[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "getClaimTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWithdrawableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalClaimable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061298e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c57806390be10cc1161006657806390be10cc14610211578063c4d66de81461022f578063c6788bdd1461024b578063f2fde38b1461027d576100ea565b8063715018a6146101cd57806374a8f103146101d75780638da5cb5b146101f3576100ea565b80634e71d92d116100c85780634e71d92d146101475780634f8d507114610151578063571b8132146101815780636d737b8f146101b1576100ea565b806321df0da7146100ef5780632e1a7d4d1461010d5780634838ed1914610129575b600080fd5b6100f7610299565b6040516101049190611d94565b60405180910390f35b6101276004803603810190610122919061192a565b6102c3565b005b610131610499565b60405161013e9190611f6a565b60405180910390f35b61014f61049f565b005b61016b60048036038101906101669190611861565b61084d565b6040516101789190611e08565b60405180910390f35b61019b60048036038101906101969190611861565b610905565b6040516101a89190611f6a565b60405180910390f35b6101cb60048036038101906101c6919061188e565b610a34565b005b6101d5610d93565b005b6101f160048036038101906101ec9190611861565b610e1b565b005b6101fb611024565b6040516102089190611d94565b60405180910390f35b61021961104e565b6040516102269190611f6a565b60405180910390f35b61024960048036038101906102449190611861565b61110d565b005b61026560048036038101906102609190611861565b61126a565b60405161027493929190611f85565b60405180910390f35b61029760048036038101906102929190611861565b611332565b005b6000609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026065541415610309576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030090611f4a565b60405180910390fd5b600260658190555061031961142a565b73ffffffffffffffffffffffffffffffffffffffff16610337611024565b73ffffffffffffffffffffffffffffffffffffffff161461038d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038490611f2a565b60405180910390fd5b8061039661104e565b10156103d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ce90611eca565b60405180910390fd5b609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61041d611024565b836040518363ffffffff1660e01b815260040161043b929190611ddf565b602060405180830381600087803b15801561045557600080fd5b505af1158015610469573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048d91906118fd565b50600160658190555050565b60995481565b600260655414156104e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dc90611f4a565b60405180910390fd5b60026065819055503360006104f982610905565b141561053a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053190611e4a565b60405180910390fd5b60001515609860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff161515146105d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c790611e8a565b60405180910390fd5b6000609860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015411156106d557609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3383600001546040518363ffffffff1660e01b8152600401610681929190611ddf565b602060405180830381600087803b15801561069b57600080fd5b505af11580156106af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d391906118fd565b505b60006106e033610905565b905060008260010160000154111561078557609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aa1e119933846001016040518363ffffffff1660e01b8152600401610752929190611daf565b600060405180830381600087803b15801561076c57600080fd5b505af1158015610780573d6000803e3d6000fd5b505050505b609860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808201600090556001820160008082016000905560018201600090556002820160006107f291906117a3565b50506004820160006101000a81549060ff0219169055505060018260040160006101000a81548160ff0219169083151502179055508060996000828254610839919061218a565b925050819055505050506001606581905550565b6060609860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600201805480602002602001604051908101604052809291908181526020016000905b828210156108fa578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906108b4565b505050509050919050565b600080609860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820154815260200160018201604051806060016040529081600082015481526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020016000905b828210156109eb578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906109a5565b505050508152505081526020016004820160009054906101000a900460ff16151515158152505090508060200151600001518160000151610a2c91906120da565b915050919050565b82600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610aa5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9c90611e2a565b60405180910390fd5b610aad61142a565b73ffffffffffffffffffffffffffffffffffffffff16610acb611024565b73ffffffffffffffffffffffffffffffffffffffff1614610b21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1890611f2a565b60405180910390fd5b6000826000013584610b3391906120da565b905080610b3e61104e565b1015610b7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7690611eaa565b60405180910390fd5b60008111610bc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb990611f0a565b60405180910390fd5b6000609860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000610c1087610905565b1415610c385783816001018181610c27919061289a565b905050848160000181905550610d55565b8360000135816001016000016000828254610c5391906120da565b9250508190555060005b848060400190610c6d9190611fc3565b9050811015610d3857816001016002016040518060400160405280878060400190610c989190611fc3565b85818110610ca957610ca861246f565b5b905060400201600001358152602001878060400190610cc89190611fc3565b85818110610cd957610cd861246f565b5b905060400201602001358152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550508080610d30906123c8565b915050610c5d565b5084816000016000828254610d4d91906120da565b925050819055505b60008160040160006101000a81548160ff0219169083151502179055508160996000828254610d8491906120da565b92505081905550505050505050565b610d9b61142a565b73ffffffffffffffffffffffffffffffffffffffff16610db9611024565b73ffffffffffffffffffffffffffffffffffffffff1614610e0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0690611f2a565b60405180910390fd5b610e196000611432565b565b610e2361142a565b73ffffffffffffffffffffffffffffffffffffffff16610e41611024565b73ffffffffffffffffffffffffffffffffffffffff1614610e97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8e90611f2a565b60405180910390fd5b806000610ea382610905565b1415610ee4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610edb90611e4a565b60405180910390fd5b60001515609860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff16151514610f7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7190611e8a565b60405180910390fd5b610f8382610905565b60996000828254610f94919061218a565b92505081905550609860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000905560018201600080820160009055600182016000905560028201600061100891906117a3565b50506004820160006101000a81549060ff021916905550505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000609954609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110ae9190611d94565b60206040518083038186803b1580156110c657600080fd5b505afa1580156110da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fe9190611957565b611108919061218a565b905090565b600060019054906101000a900460ff1680611133575060008054906101000a900460ff16155b611172576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116990611eea565b60405180910390fd5b60008060019054906101000a900460ff1615905080156111c2576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111fc57600080fd5b6112046114f8565b81609760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156112665760008060016101000a81548160ff0219169083151502179055505b5050565b609860205280600052604060002060009150905080600001549080600101604051806060016040529081600082015481526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020016000905b82821015611312578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906112cc565b5050505081525050908060040160009054906101000a900460ff16905083565b61133a61142a565b73ffffffffffffffffffffffffffffffffffffffff16611358611024565b73ffffffffffffffffffffffffffffffffffffffff16146113ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a590611f2a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561141e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141590611e6a565b60405180910390fd5b61142781611432565b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff168061151e575060008054906101000a900460ff16155b61155d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155490611eea565b60405180910390fd5b60008060019054906101000a900460ff1615905080156115ad576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6115b56115e1565b6115bd6116ba565b80156115de5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680611607575060008054906101000a900460ff16155b611646576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161163d90611eea565b60405180910390fd5b60008060019054906101000a900460ff161590508015611696576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156116b75760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff16806116e0575060008054906101000a900460ff16155b61171f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171690611eea565b60405180910390fd5b60008060019054906101000a900460ff16159050801561176f576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61177f61177a61142a565b611432565b80156117a05760008060016101000a81548160ff0219169083151502179055505b50565b50805460008255600202906000526020600020908101906117c491906117c7565b50565b5b808211156117ea576000808201600090556001820160009055506002016117c8565b5090565b6000813590506117fd8161290e565b92915050565b60008151905061181281612925565b92915050565b60006060828403121561182e5761182d612528565b5b81905092915050565b6000813590506118468161293c565b92915050565b60008151905061185b8161293c565b92915050565b6000602082840312156118775761187661253c565b5b6000611885848285016117ee565b91505092915050565b6000806000606084860312156118a7576118a661253c565b5b60006118b5868287016117ee565b93505060206118c686828701611837565b925050604084013567ffffffffffffffff8111156118e7576118e6612537565b5b6118f386828701611818565b9150509250925092565b6000602082840312156119135761191261253c565b5b600061192184828501611803565b91505092915050565b6000602082840312156119405761193f61253c565b5b600061194e84828501611837565b91505092915050565b60006020828403121561196d5761196c61253c565b5b600061197b8482850161184c565b91505092915050565b60006119908383611d00565b60408301905092915050565b60006119a88383611d2f565b60408301905092915050565b6119bd81612206565b82525050565b60006119ce82612077565b6119d881856120a7565b93506119e383612047565b8060005b83811015611a145781516119fb8882611984565b9750611a068361208d565b9250506001810190506119e7565b5085935050505092915050565b6000611a2c82612077565b611a3681856120b8565b9350611a4183612047565b8060005b83811015611a72578151611a598882611984565b9750611a648361208d565b925050600181019050611a45565b5085935050505092915050565b6000611a8a82612082565b611a9481856120a7565b9350611a9f83612057565b8060005b83811015611acf5781611ab6888261199c565b9750611ac18361209a565b925050600181019050611aa3565b5085935050505092915050565b611ae581612218565b82525050565b6000611af8600f836120c9565b9150611b038261259e565b602082019050919050565b6000611b1b6020836120c9565b9150611b26826125c7565b602082019050919050565b6000611b3e6026836120c9565b9150611b49826125f0565b604082019050919050565b6000611b616023836120c9565b9150611b6c8261263f565b604082019050919050565b6000611b84603d836120c9565b9150611b8f8261268e565b604082019050919050565b6000611ba76029836120c9565b9150611bb2826126dd565b604082019050919050565b6000611bca602e836120c9565b9150611bd58261272c565b604082019050919050565b6000611bed601e836120c9565b9150611bf88261277b565b602082019050919050565b6000611c106020836120c9565b9150611c1b826127a4565b602082019050919050565b6000611c33601f836120c9565b9150611c3e826127cd565b602082019050919050565b6000606083016000830151611c616000860182611d76565b506020830151611c746020860182611d76565b5060408301518482036040860152611c8c82826119c3565b9150508091505092915050565b6000606083016000808401549050611cb0816123ae565b611cbd6000870182611d76565b5060018401549050611cce816123ae565b611cdb6020870182611d76565b50600284018583036040870152611cf28382611a7f565b925050819250505092915050565b604082016000820151611d166000850182611d76565b506020820151611d296020850182611d76565b50505050565b604082016000808301549050611d44816123ae565b611d516000860182611d76565b5060018301549050611d62816123ae565b611d6f6020860182611d76565b5050505050565b611d7f81612244565b82525050565b611d8e81612244565b82525050565b6000602082019050611da960008301846119b4565b92915050565b6000604082019050611dc460008301856119b4565b8181036020830152611dd68184611c99565b90509392505050565b6000604082019050611df460008301856119b4565b611e016020830184611d85565b9392505050565b60006020820190508181036000830152611e228184611a21565b905092915050565b60006020820190508181036000830152611e4381611aeb565b9050919050565b60006020820190508181036000830152611e6381611b0e565b9050919050565b60006020820190508181036000830152611e8381611b31565b9050919050565b60006020820190508181036000830152611ea381611b54565b9050919050565b60006020820190508181036000830152611ec381611b77565b9050919050565b60006020820190508181036000830152611ee381611b9a565b9050919050565b60006020820190508181036000830152611f0381611bbd565b9050919050565b60006020820190508181036000830152611f2381611be0565b9050919050565b60006020820190508181036000830152611f4381611c03565b9050919050565b60006020820190508181036000830152611f6381611c26565b9050919050565b6000602082019050611f7f6000830184611d85565b92915050565b6000606082019050611f9a6000830186611d85565b8181036020830152611fac8185611c49565b9050611fbb6040830184611adc565b949350505050565b60008083356001602003843603038112611fe057611fdf61252d565b5b80840192508235915067ffffffffffffffff82111561200257612001612523565b5b60208301925060408202360383131561201e5761201d612532565b5b509250929050565b6000819050612036826002612130565b9050919050565b6000819050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600082905092915050565b600081519050919050565b600081549050919050565b6000602082019050919050565b6000600282019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006120e582612244565b91506120f083612244565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561212557612124612440565b5b828201905092915050565b600061213b82612244565b915061214683612244565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561217f5761217e612440565b5b828202905092915050565b600061219582612244565b91506121a083612244565b9250828210156121b3576121b2612440565b5b828203905092915050565b6000819050919050565b81831015612201576121d982612026565b6121e284612026565b6121eb83612057565b8181018382016121fb818361224e565b50505050505b505050565b600061221182612224565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b5b8181101561226d57612262600082612568565b60028101905061224f565b5050565b61227e6000808301612586565b61228c600060018301612586565b50565b600061229a82612244565b9050919050565b6122ab838361206c565b6122b581836124ed565b6122be8361203d565b6122c783612057565b6000805b848110156122f757836122df8184866128cb565b604085019450600284019350506001810190506122cb565b5050505050505050565b600081016000830180612313816124d7565b905061231f81846128a8565b505050600181016020830180612334816124d7565b905061234081846128a8565b50505060028101604083016123558185611fc3565b61236081838661288a565b505050505050565b60008101600083018061237a816124d7565b905061238681846128a8565b50505060018101602083018061239b816124d7565b90506123a781846128a8565b5050505050565b60006123c16123bc8361255b565b6121be565b9050919050565b60006123d382612244565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561240657612405612440565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000819050919050565b600081356124e48161293c565b80915050919050565b680100000000000000008211156125075761250661249e565b5b61251081612082565b82825561251e8382846121c8565b505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008160001b9050919050565b600082821b905092915050565b60008160001c9050919050565b6000821461257957612578612411565b5b61258281612271565b5050565b61258e612953565b6125998184846128e9565b505050565b7f496e76616c696420616464726573730000000000000000000000000000000000600082015250565b7f546f6b656e436c61696d3a20436c61696d20646f6573206e6f74206578697374600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e436c61696d3a20436c61696d20686173206265656e2072656c656160008201527f7365640000000000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e436c61696d3a2063616e6e6f742063726561746520636c61696d2060008201527f62656361757365206e6f742073756666696369656e7420746f6b656e73000000602082015250565b7f546f6b656e436c61696d3a206e6f7420656e6f7567682077697468647261776160008201527f626c652066756e64730000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f546f6b656e436c61696d3a20616d6f756e74206d757374206265203e20300000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61282284612541565b9350801983169250808416831791505092915050565b6000600883026128687fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261254e565b612872868361254e565b95508019841693508086168417925050509392505050565b6128958383836122a1565b505050565b6128a48282612301565b5050565b6128b18261228f565b6128c46128bd826124cd565b83546127f6565b8255505050565b81156128da576128d9612411565b5b6128e48382612368565b505050565b6128f28361228f565b6129066128fe826124cd565b848454612838565b825550505050565b61291781612206565b811461292257600080fd5b50565b61292e81612218565b811461293957600080fd5b50565b61294581612244565b811461295057600080fd5b50565b60009056fea2646970667358221220868e44d7b67a7cd946ac2178ef59258e04219a36244e9c8c5caa455fbfe7419164736f6c63430008070033";

export class TokenClaim__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenClaim> {
    return super.deploy(overrides || {}) as Promise<TokenClaim>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TokenClaim {
    return super.attach(address) as TokenClaim;
  }
  connect(signer: Signer): TokenClaim__factory {
    return super.connect(signer) as TokenClaim__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenClaimInterface {
    return new utils.Interface(_abi) as TokenClaimInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenClaim {
    return new Contract(address, _abi, signerOrProvider) as TokenClaim;
  }
}
