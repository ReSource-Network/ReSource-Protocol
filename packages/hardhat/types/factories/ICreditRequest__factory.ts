/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ICreditRequest,
  ICreditRequestInterface,
} from "../ICreditRequest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_network",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ambassador",
        type: "address",
      },
    ],
    name: "acceptAmbassadorInvitation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_network",
        type: "address",
      },
      {
        internalType: "address",
        name: "_counterparty",
        type: "address",
      },
    ],
    name: "acceptRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_network",
        type: "address",
      },
      {
        internalType: "address",
        name: "_counterparty",
        type: "address",
      },
    ],
    name: "approveRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_network",
        type: "address",
      },
      {
        internalType: "address",
        name: "_counterparty",
        type: "address",
      },
    ],
    name: "calculateRequestCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_counterparty",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_creditLimit",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_network",
        type: "address",
      },
    ],
    name: "createRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_network",
        type: "address",
      },
      {
        internalType: "address",
        name: "_counterparty",
        type: "address",
      },
    ],
    name: "deleteRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_network",
        type: "address",
      },
      {
        internalType: "address",
        name: "_counterparty",
        type: "address",
      },
    ],
    name: "getAmbassador",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_network",
        type: "address",
      },
      {
        internalType: "address",
        name: "_counterparty",
        type: "address",
      },
    ],
    name: "getCreditRequest",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "approved",
            type: "bool",
          },
          {
            internalType: "address",
            name: "ambassador",
            type: "address",
          },
          {
            internalType: "address",
            name: "network",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "creditLimit",
            type: "uint256",
          },
        ],
        internalType: "struct ICreditRequest.CreditRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_network",
        type: "address",
      },
      {
        internalType: "address",
        name: "_counterparty",
        type: "address",
      },
    ],
    name: "inviteCounterparty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_network",
        type: "address",
      },
      {
        internalType: "address",
        name: "_networkAccount",
        type: "address",
      },
    ],
    name: "isUnstaking",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_network",
        type: "address",
      },
      {
        internalType: "address",
        name: "_counterparty",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_creditLimit",
        type: "uint256",
      },
    ],
    name: "updateRequestLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ICreditRequest__factory {
  static readonly abi = _abi;
  static createInterface(): ICreditRequestInterface {
    return new utils.Interface(_abi) as ICreditRequestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICreditRequest {
    return new Contract(address, _abi, signerOrProvider) as ICreditRequest;
  }
}
