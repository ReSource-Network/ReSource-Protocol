/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UnderwriteFeeManager,
  UnderwriteFeeManagerInterface,
} from "../UnderwriteFeeManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_networkToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_percent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "calculatePercentInCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_network",
        type: "address",
      },
      {
        internalType: "address",
        name: "_networkMember",
        type: "address",
      },
    ],
    name: "claimFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collateralToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_network",
        type: "address",
      },
      {
        internalType: "address",
        name: "_networkAccount",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_transactionValue",
        type: "uint256",
      },
    ],
    name: "collectFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "creditManager",
    outputs: [
      {
        internalType: "contract ICreditManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creditRequest",
    outputs: [
      {
        internalType: "contract ICreditRequest",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_priceOracle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_creditManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_protocolRoles",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceOracle",
    outputs: [
      {
        internalType: "contract IPriceOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolRoles",
    outputs: [
      {
        internalType: "contract IProtocolRoles",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506119cb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063b2016bd41161008c578063e00efe4a11610066578063e00efe4a146101de578063ed04b842146101fa578063f2fde38b14610218578063f8c8765e14610234576100cf565b8063b2016bd414610172578063c12c21c014610190578063dbac960c146101ae576100cf565b806305091763146100d45780632630c12f146100f25780632dbfa73514610110578063715018a61461012c5780638da5cb5b146101365780639642366314610154575b600080fd5b6100dc610250565b6040516100e991906114ce565b60405180910390f35b6100fa610276565b60405161010791906114b3565b60405180910390f35b61012a6004803603810190610125919061112c565b61029c565b005b61013461038f565b005b61013e610417565b60405161014b91906113f5565b60405180910390f35b61015c610441565b60405161016991906113f5565b60405180910390f35b61017a61046b565b6040516101879190611498565b60405180910390f35b610198610491565b6040516101a59190611462565b60405180910390f35b6101c860048036038101906101c39190611226565b6104b7565b6040516101d59190611569565b60405180910390f35b6101f860048036038101906101f391906111d3565b610595565b005b61020261099e565b60405161020f919061147d565b60405180910390f35b610232600480360381019061022d91906110ff565b6109c4565b005b61024e6004803603810190610249919061116c565b610abc565b005b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33606a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518363ffffffff1660e01b8152600401610338929190611439565b602060405180830381600087803b15801561035257600080fd5b505af1158015610366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038a9190611279565b505050565b610397610ca5565b73ffffffffffffffffffffffffffffffffffffffff166103b5610417565b73ffffffffffffffffffffffffffffffffffffffff161461040b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040290611529565b60405180910390fd5b6104156000610cad565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b30e8ae486856040518363ffffffff1660e01b8152600401610517929190611439565b602060405180830381600087803b15801561053157600080fd5b505af1158015610545573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056991906112d3565b9050620f424063ffffffff1681856105819190611641565b61058b9190611610565b9150509392505050565b60006105aa84614e2063ffffffff16846104b7565b90506000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e2cb164586866040518363ffffffff1660e01b815260040161060b929190611410565b602060405180830381600087803b15801561062557600080fd5b505af1158015610639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065d9190611279565b90506000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302d7bbff87876040518363ffffffff1660e01b81526004016106be929190611410565b608060405180830381600087803b1580156106d857600080fd5b505af11580156106ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071091906112a6565b905060008673ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b815260040161074d91906113f5565b60206040518083038186803b15801561076557600080fd5b505afa158015610779573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079d91906112d3565b905060008186119050831580156107b15750805b156108155784606a6000856000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461080991906115ba565b92505081905550610994565b606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc1da0af89896040518363ffffffff1660e01b8152600401610872929190611410565b602060405180830381600087803b15801561088c57600080fd5b505af11580156108a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c49190611279565b15610904576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fb90611549565b60405180910390fd5b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636cee1fbe89896040518363ffffffff1660e01b8152600401610961929190611410565b600060405180830381600087803b15801561097b57600080fd5b505af115801561098f573d6000803e3d6000fd5b505050505b5050505050505050565b606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109cc610ca5565b73ffffffffffffffffffffffffffffffffffffffff166109ea610417565b73ffffffffffffffffffffffffffffffffffffffff1614610a40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3790611529565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ab0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa7906114e9565b60405180910390fd5b610ab981610cad565b50565b600060019054906101000a900460ff1680610ae2575060008054906101000a900460ff16155b610b21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1890611509565b60405180910390fd5b60008060019054906101000a900460ff161590508015610b71576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b84606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c7d610d73565b8015610c9e5760008060016101000a81548160ff0219169083151502179055505b5050505050565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff1680610d99575060008054906101000a900460ff16155b610dd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dcf90611509565b60405180910390fd5b60008060019054906101000a900460ff161590508015610e28576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610e30610e5c565b610e38610f35565b8015610e595760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610e82575060008054906101000a900460ff16155b610ec1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb890611509565b60405180910390fd5b60008060019054906101000a900460ff161590508015610f11576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015610f325760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610f5b575060008054906101000a900460ff16155b610f9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9190611509565b60405180910390fd5b60008060019054906101000a900460ff161590508015610fea576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610ffa610ff5610ca5565b610cad565b801561101b5760008060016101000a81548160ff0219169083151502179055505b50565b60008135905061102d81611950565b92915050565b60008151905061104281611950565b92915050565b60008151905061105781611967565b92915050565b6000608082840312156110735761107261181f565b5b61107d6080611584565b9050600061108d84828501611033565b60008301525060206110a184828501611033565b60208301525060406110b5848285016110ea565b60408301525060606110c9848285016110ea565b60608301525092915050565b6000813590506110e48161197e565b92915050565b6000815190506110f98161197e565b92915050565b60006020828403121561111557611114611824565b5b60006111238482850161101e565b91505092915050565b6000806040838503121561114357611142611824565b5b60006111518582860161101e565b92505060206111628582860161101e565b9150509250929050565b6000806000806080858703121561118657611185611824565b5b60006111948782880161101e565b94505060206111a58782880161101e565b93505060406111b68782880161101e565b92505060606111c78782880161101e565b91505092959194509250565b6000806000606084860312156111ec576111eb611824565b5b60006111fa8682870161101e565b935050602061120b8682870161101e565b925050604061121c868287016110d5565b9150509250925092565b60008060006060848603121561123f5761123e611824565b5b600061124d8682870161101e565b935050602061125e868287016110d5565b925050604061126f868287016110d5565b9150509250925092565b60006020828403121561128f5761128e611824565b5b600061129d84828501611048565b91505092915050565b6000608082840312156112bc576112bb611824565b5b60006112ca8482850161105d565b91505092915050565b6000602082840312156112e9576112e8611824565b5b60006112f7848285016110ea565b91505092915050565b6113098161169b565b82525050565b611318816116e3565b82525050565b611327816116f5565b82525050565b61133681611707565b82525050565b61134581611719565b82525050565b6113548161172b565b82525050565b60006113676026836115a9565b91506113728261183a565b604082019050919050565b600061138a602e836115a9565b915061139582611889565b604082019050919050565b60006113ad6020836115a9565b91506113b8826118d8565b602082019050919050565b60006113d06021836115a9565b91506113db82611901565b604082019050919050565b6113ef816116d9565b82525050565b600060208201905061140a6000830184611300565b92915050565b60006040820190506114256000830185611300565b6114326020830184611300565b9392505050565b600060408201905061144e6000830185611300565b61145b60208301846113e6565b9392505050565b6000602082019050611477600083018461130f565b92915050565b6000602082019050611492600083018461131e565b92915050565b60006020820190506114ad600083018461132d565b92915050565b60006020820190506114c8600083018461133c565b92915050565b60006020820190506114e3600083018461134b565b92915050565b600060208201905081810360008301526115028161135a565b9050919050565b600060208201905081810360008301526115228161137d565b9050919050565b60006020820190508181036000830152611542816113a0565b9050919050565b60006020820190508181036000830152611562816113c3565b9050919050565b600060208201905061157e60008301846113e6565b92915050565b600061158e61159f565b905061159a8282611761565b919050565b6000604051905090565b600082825260208201905092915050565b60006115c5826116d9565b91506115d0836116d9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561160557611604611792565b5b828201905092915050565b600061161b826116d9565b9150611626836116d9565b925082611636576116356117c1565b5b828204905092915050565b600061164c826116d9565b9150611657836116d9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156116905761168f611792565b5b828202905092915050565b60006116a6826116b9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116ee8261173d565b9050919050565b60006117008261173d565b9050919050565b60006117128261173d565b9050919050565b60006117248261173d565b9050919050565b60006117368261173d565b9050919050565b60006117488261174f565b9050919050565b600061175a826116b9565b9050919050565b61176a82611829565b810181811067ffffffffffffffff82111715611789576117886117f0565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4665654d616e616765723a204372656469744c696e652069732065787069726560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b6119598161169b565b811461196457600080fd5b50565b611970816116ad565b811461197b57600080fd5b50565b611987816116d9565b811461199257600080fd5b5056fea2646970667358221220debcc34fdbfdacb00060b48160cdc3c3300132b26ebe3d7e4d9121d400ec303864736f6c63430008070033";

export class UnderwriteFeeManager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UnderwriteFeeManager> {
    return super.deploy(overrides || {}) as Promise<UnderwriteFeeManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UnderwriteFeeManager {
    return super.attach(address) as UnderwriteFeeManager;
  }
  connect(signer: Signer): UnderwriteFeeManager__factory {
    return super.connect(signer) as UnderwriteFeeManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnderwriteFeeManagerInterface {
    return new utils.Interface(_abi) as UnderwriteFeeManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UnderwriteFeeManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UnderwriteFeeManager;
  }
}
