/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PriceOracle, PriceOracleInterface } from "../PriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_oracleManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getPriceInPPT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracleManager",
        type: "address",
      },
    ],
    name: "setOracleManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ad7380380610ad783398181016040528101906100329190610193565b61004e61004361009d60201b60201c565b6100a560201b60201c565b8160018190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610242565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008151905061017881610214565b92915050565b60008151905061018d8161022b565b92915050565b600080604083850312156101aa576101a961020f565b5b60006101b88582860161017e565b92505060206101c985828601610169565b9150509250929050565b60006101de826101e5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b61021d816101d3565b811461022857600080fd5b50565b61023481610205565b811461023f57600080fd5b50565b610886806102516000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806391b7f5ed1161005b57806391b7f5ed146100f1578063929e2e081461010d578063a035b1fe14610129578063f2fde38b1461014757610088565b8063338f1ce61461008d578063565d878c146100ab578063715018a6146100c95780638da5cb5b146100d3575b600080fd5b610095610163565b6040516100a291906106ee565b60405180910390f35b6100b361016d565b6040516100c09190610673565b60405180910390f35b6100d1610193565b005b6100db61021b565b6040516100e89190610673565b60405180910390f35b61010b600480360381019061010691906105bf565b610244565b005b61012760048036038101906101229190610592565b6102de565b005b61013161039e565b60405161013e91906106ee565b60405180910390f35b610161600480360381019061015c9190610592565b6103a4565b005b6000600154905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61019b61049c565b73ffffffffffffffffffffffffffffffffffffffff166101b961021b565b73ffffffffffffffffffffffffffffffffffffffff161461020f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610206906106ce565b60405180910390fd5b61021960006104a4565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cb906106ae565b60405180910390fd5b8060018190555050565b6102e661049c565b73ffffffffffffffffffffffffffffffffffffffff1661030461021b565b73ffffffffffffffffffffffffffffffffffffffff161461035a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610351906106ce565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60015481565b6103ac61049c565b73ffffffffffffffffffffffffffffffffffffffff166103ca61021b565b73ffffffffffffffffffffffffffffffffffffffff1614610420576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610417906106ce565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610490576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104879061068e565b60405180910390fd5b610499816104a4565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061057781610822565b92915050565b60008135905061058c81610839565b92915050565b6000602082840312156105a8576105a7610756565b5b60006105b684828501610568565b91505092915050565b6000602082840312156105d5576105d4610756565b5b60006105e38482850161057d565b91505092915050565b6105f58161071a565b82525050565b6000610608602683610709565b91506106138261075b565b604082019050919050565b600061062b602483610709565b9150610636826107aa565b604082019050919050565b600061064e602083610709565b9150610659826107f9565b602082019050919050565b61066d8161074c565b82525050565b600060208201905061068860008301846105ec565b92915050565b600060208201905081810360008301526106a7816105fb565b9050919050565b600060208201905081810360008301526106c78161061e565b9050919050565b600060208201905081810360008301526106e781610641565b9050919050565b60006020820190506107036000830184610664565b92915050565b600082825260208201905092915050565b60006107258261072c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f50726963654f7261636c653a2043616c6c6572206d757374206265206d616e6160008201527f6765722e00000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61082b8161071a565b811461083657600080fd5b50565b6108428161074c565b811461084d57600080fd5b5056fea264697066735822122030e930619dd7820258e662b482d6fc6b9532f754df1ba23ff532112ee7af79d064736f6c63430008070033";

export class PriceOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _price: BigNumberish,
    _oracleManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PriceOracle> {
    return super.deploy(
      _price,
      _oracleManager,
      overrides || {}
    ) as Promise<PriceOracle>;
  }
  getDeployTransaction(
    _price: BigNumberish,
    _oracleManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_price, _oracleManager, overrides || {});
  }
  attach(address: string): PriceOracle {
    return super.attach(address) as PriceOracle;
  }
  connect(signer: Signer): PriceOracle__factory {
    return super.connect(signer) as PriceOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceOracleInterface {
    return new utils.Interface(_abi) as PriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceOracle {
    return new Contract(address, _abi, signerOrProvider) as PriceOracle;
  }
}
