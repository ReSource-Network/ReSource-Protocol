specVersion: 0.0.2
schema:
  file: ./src/schema.graphql
dataSources:
  - kind: ethereum/contract
    name: UnderwriteManager
    network: "{{network}}"
    source:
      address: "{{UnderwriteManagerAddress}}"
      abi: UnderwriteManager
      startBlock: {{UnderwriteManagerStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - CreditLine
        - Underwriter
      abis:
        - name: UnderwriteManager
          file: ./abis/UnderwriteManager.json
      eventHandlers:
        - event: NewCreditLine((address,address,(uint256,address,uint256,uint256),uint256))
          handler: handleNewCreditLine
        - event: ExtendCreditLine((address,address,(uint256,address,uint256,uint256),uint256))
          handler: handleExtendCreditLine
        - event: CreditLineReward((address,address,(uint256,address,uint256,uint256)))
          handler: handleCreditLineReward
        - event: CreditLineRewardClaimed(tuple[])
          handler: handleCreditLineRewardClaimed
        - event: CreditLineWithdrawal((address,address,(uint256,address,uint256,uint256),uint256))
          handler: handleCreditLineWithdrawal
      file: ./src/mapping/UnderwriteManager/index.ts
  - kind: ethereum/contract
    name: RUSD
    network: "{{network}}"
    source:
      address: "{{RUSDAddress}}"
      abi: RUSD
      startBlock: {{RUSDStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - CreditLine
      abis:
        - name: RUSD
          file: ./abis/RUSD.json
      eventHandlers:
        - event: BalanceUpdate(address,address,uint256,uint256,uint256,uint256)
          handler: handleBalanceUpdate
      file: ./src/mapping/RUSD/index.ts
