type CreditPool @entity {
  id: ID!
  underwriter: Underwriter!
  creditLines: [CreditLine!] @derivedFrom(field: "pool")
  totalCredit: BigInt!
  totalCollateral: BigInt!
  active: Boolean!
}

type CreditLine @entity {
  id: ID!
  pool: CreditPool!
  networkMember: NetworkMember! @derivedFrom(field: "creditLine")
  network: Bytes!
  issueDate: BigInt!
  acitve: Boolean!
  creditLimit: BigInt!
  creditBalance: BigInt!
  balance: BigInt!
}

type NetworkMember @entity {
  id: ID!
  creditRequests: [CreditRequest!] @derivedFrom(field: "networkMember")
  creditLine: CreditLine!
  totalFeesAccrued: BigInt!
}

type Underwriter @entity {
  id: ID!
  pools: [CreditPool!] @derivedFrom(field: "underwriter")
  rewards: BigInt!
}

type CreditRequest @entity {
  id: ID!
  networkMember: NetworkMember!
  type: RequestType!
  approved: Boolean!
  creditLimit: BigInt!
}

enum RequestType {
  new
  unstaking
  extension
}
